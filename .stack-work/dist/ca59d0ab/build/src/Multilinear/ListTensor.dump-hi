
==================== FINAL INTERFACE ====================
2017-03-06 22:11:49.4288054 UTC

interface Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU:Multilinear.ListTensor 8002
  interface hash: c392cfb400fa192f20e273427247f2e7
  ABI hash: 34026a9c33a86b91757ad1558ea32528
  export-list hash: 2f214c80064bbe68480e1094bcea70a4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d421a442bac5348a67fd3f91398c6034
  sig of: Nothing
  used TH splices: False
  where
exports:
  Multilinear.ListTensor._dot
  Multilinear.ListTensor.commonIndex
  Multilinear.ListTensor.switchInd
  Multilinear.ListTensor.switchInd'
  Multilinear.ListTensor.Tensor{Multilinear.ListTensor.Err Multilinear.ListTensor.Scalar Multilinear.ListTensor.Tensor errMessage scalarVal tensorData tensorIndex}
module dependencies: Multilinear Multilinear.Covector
                     Multilinear.Index Multilinear.Tensor Multilinear.Vector
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0*
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  Multilinear 7b5e7bced7ce0c03616f06c89a32d0a9
  exports: 80e350189d81f91ad87623902c4bd757
  Multilinear 8469c9569c854c1ba5d54c6a4208bd70
  elems c6485b17fcc5bd131a1059f7ccd85b37
  indices 748a70f1e4d2e8d7d004e33b489922fb
  order c30998cab042793172336f6c27959922
  rename 2a04f29076cdd53afa90d8007cd4b6b3
  transpose f2ceff3fcbdf98b82afe5ec5bfaaf618
import  -/  Multilinear.Index 6b74f99d0b1eae81d6b9713aea48329e
  !=! 0a57746d1700d35dcb3b0c5f371d75bf
  Contravariant d6333ec1666cac45303e0a10b22ef507
  Covariant 61b0b8f99d3e1c02814d72096a559931
  Indifferent 25143d1afe66ae924daf613a62b7c482
  TIndex c25d5a990f007668cc984a5c013dda4a
  indexCount c9a78087cb1b749fa03ff7c399c0b5e4
  indexName 0a9d105218ffa51f72a0d7ddbe136701
import  -/  base-4.9.1.0:Control.Monad f915f187cea611986ebb12dbc69279ab
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:Data.List 7349774f430841349c90dfd1144aea97
import  -/  base-4.9.1.0:Data.Maybe ecf0c6f81372d9b58b142d5e758ea51b
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Float b620368aab866c2bb9d3a0a459566b84
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  binary-0.8.3.0@binary-0.8.3.0:Data.Binary 471a6fe52b2904efddd28a463c9c8819
import  -/  binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Class 26b921856884ebf3fa980365efaa2264
import  -/  binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Get.Internal 8b5079286a0c6818c089632e1030a3ea
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
308e239bd673f098b9054c39581f1f8e
  (!*!) ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3,
     Strictness: <L,U(C(U),A,C(U),A,A,A,C(U))><S,1*U><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fBinaryTensor ::
    Data.Binary.Class.Binary a =>
    Data.Binary.Class.Binary (Multilinear.ListTensor.Tensor a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(U(U,U)),U,A)>m,
     Unfolding: DFun: @ a ($dBinary :: Data.Binary.Class.Binary a).
                  @ (Multilinear.ListTensor.Tensor a)
                  (Multilinear.ListTensor.$fBinaryTensor_$cput @ a $dBinary)
                  (Multilinear.ListTensor.$fBinaryTensor_$cget @ a $dBinary)
                  (Multilinear.ListTensor.$fBinaryTensor_$cputList @ a $dBinary) -}
308e239bd673f098b9054c39581f1f8e
  $fBinaryTensor1 ::
    Data.Binary.Class.Binary a =>
    [Multilinear.ListTensor.Tensor a] -> Data.Binary.Put.Put
  {- Arity: 1, Strictness: <L,U(C(U(U,U)),U,A)> -}
308e239bd673f098b9054c39581f1f8e
  $fBinaryTensor2 ::
    Data.Binary.Class.Binary a =>
    Data.Binary.Get.Internal.Get (Multilinear.ListTensor.Tensor a)
  {- Arity: 1, Strictness: <L,U(C(U(U,U)),U,A)> -}
308e239bd673f098b9054c39581f1f8e
  $fBinaryTensor_$cget ::
    Data.Binary.Class.Binary a =>
    Data.Binary.Get.Internal.Get (Multilinear.ListTensor.Tensor a)
  {- Arity: 1, Strictness: <L,U(C(U(U,U)),U,A)>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fBinaryTensor2 -}
308e239bd673f098b9054c39581f1f8e
  $fBinaryTensor_$cput ::
    Data.Binary.Class.Binary a =>
    Multilinear.ListTensor.Tensor a -> Data.Binary.Put.Put
  {- Arity: 2, Strictness: <L,U(C(U(U,U)),U,A)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Data.Binary.Class.Binary a)
                   (w1 :: Multilinear.ListTensor.Tensor a) ->
                 case Multilinear.ListTensor.$w$cput
                        @ a
                        w
                        w1 of ww { (#,#) ww1 ww2 ->
                 (Data.Binary.Put.PairS @ () ww1 ww2)
                   `cast`
                 (Sym (Data.Binary.Put.N:PutM[0]) <()>_N) }) -}
308e239bd673f098b9054c39581f1f8e
  $fBinaryTensor_$cputList ::
    Data.Binary.Class.Binary a =>
    [Multilinear.ListTensor.Tensor a] -> Data.Binary.Put.Put
  {- Arity: 1, Strictness: <L,U(C(U(U,U)),U,A)>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fBinaryTensor1 -}
308e239bd673f098b9054c39581f1f8e
  $fEqTensor ::
    GHC.Classes.Eq a =>
    GHC.Classes.Eq (Multilinear.ListTensor.Tensor a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Unfolding: DFun: @ a ($dEq :: GHC.Classes.Eq a).
                  @ (Multilinear.ListTensor.Tensor a)
                  (Multilinear.ListTensor.$fEqTensor_$c== @ a $dEq)
                  (Multilinear.ListTensor.$fEqTensor_$c/= @ a $dEq) -}
308e239bd673f098b9054c39581f1f8e
  $fEqTensor1 ::
    GHC.Classes.Eq a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fEqTensor2 ::
    GHC.Classes.Eq a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)> -}
308e239bd673f098b9054c39581f1f8e
  $fEqTensor_$c/= ::
    GHC.Classes.Eq a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fEqTensor1 -}
308e239bd673f098b9054c39581f1f8e
  $fEqTensor_$c== ::
    GHC.Classes.Eq a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fEqTensor2 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor ::
    GHC.Float.Floating a =>
    GHC.Float.Floating (Multilinear.ListTensor.Tensor a)
  DFunId
  {- Arity: 1,
     Strictness: <L,U(U(U(U,U,U,U,U,U,U),U,U,U),1*U,C(U),C(U),A,A,A,C(U),C(U),A,C(U),C(U),C(U),C(U),C(U),A,C(U),C(U),C(U),A,A,A,A)>,
     Unfolding: DFun: @ a ($dFloating :: GHC.Float.Floating a).
                  @ (Multilinear.ListTensor.Tensor a)
                  (Multilinear.ListTensor.$fFloatingTensor33 @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor32 @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$cexp @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clog @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$csqrt @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$c** @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clogBase @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$csin @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$ccos @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$ctan @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$casin @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$cacos @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$catan @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$csinh @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$ccosh @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$ctanh @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$casinh @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$cacosh @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$catanh @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clog1p @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$cexpm1 @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clog1pexp @ a $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clog1mexp
                     @ a
                     $dFloating) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor1 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(S(S(LLLLLLC(S))LLL)LLLLLLLLLLLLLLLLLLLLLL),U(U(U(U,U,U,U,U,U,U),U,U,U),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 let {
                   $dNum :: GHC.Real.Fractional a
                   = GHC.Float.$p1Floating @ a $dFloating
                 } in
                 let {
                   $dNum1 :: GHC.Num.Num a = GHC.Real.$p1Fractional @ a $dNum
                 } in
                 case GHC.Num.fromInteger
                        @ a
                        $dNum1
                        Multilinear.ListTensor.$fFloatingTensor8 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor4
                   @ a
                   $dFloating
                   (Multilinear.ListTensor.$fFloatingTensor3
                      @ a
                      $dNum1
                      (Multilinear.ListTensor.Scalar @ a dt1)
                      (Multilinear.ListTensor.$fFloatingTensor2
                         @ a
                         $dFloating
                         eta)) }) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor10 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 let {
                   $dFractional :: GHC.Real.Fractional a
                   = GHC.Float.$p1Floating @ a $dFloating
                 } in
                 let {
                   $dNum :: GHC.Num.Num a = GHC.Real.$p1Fractional @ a $dFractional
                 } in
                 case GHC.Num.fromInteger
                        @ a
                        $dNum
                        Multilinear.ListTensor.$fFloatingTensor7 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor3
                   @ a
                   $dNum
                   (Multilinear.ListTensor.$fFloatingTensor2 @ a $dFloating eta)
                   (Multilinear.ListTensor.Scalar @ a dt1) }) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor11 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor12 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor13 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor14 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 Multilinear.ListTensor.$fFloatingTensor17
                   @ a
                   (GHC.Float.$p1Floating @ a $dFloating)
                   (Multilinear.ListTensor.$fFloatingTensor16 @ a $dFloating eta)
                   (Multilinear.ListTensor.$fFloatingTensor15 @ a $dFloating eta)) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor15 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor16 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor17 ::
    GHC.Real.Fractional a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, Strictness: <L,U(A,C(U),A,A)><S,1*U><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor18 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor19 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor2 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor20 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor21 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 Multilinear.ListTensor.$fFloatingTensor17
                   @ a
                   (GHC.Float.$p1Floating @ a $dFloating)
                   (Multilinear.ListTensor.$fFloatingTensor23 @ a $dFloating eta)
                   (Multilinear.ListTensor.$fFloatingTensor22 @ a $dFloating eta)) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor22 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor23 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor24 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3,
     Strictness: <L,U(1*U(A,C(U),A,A),A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a)
                   (eta1 :: Multilinear.ListTensor.Tensor a) ->
                 Multilinear.ListTensor.$fFloatingTensor17
                   @ a
                   (GHC.Float.$p1Floating @ a $dFloating)
                   (Multilinear.ListTensor.$fFloatingTensor6 @ a $dFloating eta1)
                   (Multilinear.ListTensor.$fFloatingTensor6 @ a $dFloating eta)) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor25 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3,
     Strictness: <L,U(1*U(1*U(C(U),A,C(U),A,A,A,C(U)),A,A,A),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a)
                   (eta1 :: Multilinear.ListTensor.Tensor a) ->
                 Multilinear.ListTensor.$fFloatingTensor2
                   @ a
                   $dFloating
                   (Multilinear.ListTensor.$fFloatingTensor26
                      @ a
                      (GHC.Real.$p1Fractional @ a (GHC.Float.$p1Floating @ a $dFloating))
                      (Multilinear.ListTensor.$fFloatingTensor6 @ a $dFloating eta)
                      eta1)) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor26 ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3,
     Strictness: <L,U(C(U),A,C(U),A,A,A,C(U))><S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds2 :: Multilinear.ListTensor.Tensor a)
                   (ds3 :: Multilinear.ListTensor.Tensor a) ->
                 case ds2 of wild {
                   DEFAULT
                   -> case ds3 of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             Multilinear.ListTensor.Tensor ds4 ds5
                             -> case wild1 of wild3 {
                                  Multilinear.ListTensor.Tensor ds6 ds7
                                  -> case Multilinear.ListTensor.$wcommonIndex
                                            @ a
                                            wild2
                                            wild3 of cmi { DEFAULT ->
                                     Multilinear.ListTensor.!*!
                                       @ a
                                       $dNum
                                       (Multilinear.ListTensor.$wswitchInd' @ a wild2 cmi)
                                       (Multilinear.ListTensor.$wswitchInd' @ a wild3 cmi) }
                                  Multilinear.ListTensor.Err ipv -> wild3 }
                             Multilinear.ListTensor.Err msg -> wild2 }
                        Multilinear.ListTensor.Scalar x2
                        -> Multilinear.ListTensor.$fFloatingTensor27
                             @ a
                             @ a
                             (\ (ds4 :: a) -> GHC.Num.* @ a $dNum ds4 x2)
                             wild }
                   Multilinear.ListTensor.Scalar x1
                   -> case ds3 of wild1 {
                        DEFAULT
                        -> Multilinear.ListTensor.$fFloatingTensor27
                             @ a
                             @ a
                             (GHC.Num.* @ a $dNum x1)
                             wild1
                        Multilinear.ListTensor.Scalar x2
                        -> case GHC.Num.* @ a $dNum x1 x2 of dt1 { DEFAULT ->
                           Multilinear.ListTensor.Scalar @ a dt1 } } }) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor27 ::
    (a -> b)
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor b
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor28 ::
    Multilinear.ListTensor.Tensor a -> [Multilinear.Index.TIndex]
  {- Arity: 1, Strictness: <S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor29 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(S(LLLC(S))LLLLLLLLLLLLLLLLLLLLLL),U(U(U(C(U),A,C(U),A,A,A,C(U)),A,A,1*C1(U)),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 case GHC.Real.fromRational
                        @ a
                        (GHC.Float.$p1Floating @ a $dFloating)
                        Multilinear.ListTensor.$fFloatingTensor30 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor25
                   @ a
                   $dFloating
                   eta
                   (Multilinear.ListTensor.Scalar @ a dt1) }) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor3 ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A)><S,1*U><S,1*U> -}
37717ef5559c4a71728683db52516b9d
  $fFloatingTensor30 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- HasNoCafRefs,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   Multilinear.ListTensor.$fFloatingTensor7
                   Multilinear.ListTensor.$fFloatingTensor31) -}
17c4259988c92ac9c5f0dda473acb39d
  $fFloatingTensor31 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor32 ::
    GHC.Float.Floating a => Multilinear.ListTensor.Tensor a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m1,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dFloating :: GHC.Float.Floating a) ->
                 case GHC.Float.pi @ a $dFloating of dt1 { DEFAULT ->
                 Multilinear.ListTensor.Scalar @ a dt1 }) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor33 ::
    GHC.Float.Floating a =>
    GHC.Real.Fractional (Multilinear.ListTensor.Tensor a)
  {- Arity: 1,
     Strictness: <L,1*U(1*U(U(C(U),C(C1(U)),C(U),A,C(U),C(U),C(U)),C(U),A,C(U)),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dFloating :: GHC.Float.Floating a) ->
                 Multilinear.ListTensor.$fFractionalTensor
                   @ a
                   (GHC.Float.$p1Floating @ a $dFloating)) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor4 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 let {
                   $dFractional :: GHC.Real.Fractional a
                   = GHC.Float.$p1Floating @ a $dFloating
                 } in
                 let {
                   $dNum :: GHC.Num.Num a = GHC.Real.$p1Fractional @ a $dFractional
                 } in
                 case GHC.Num.fromInteger
                        @ a
                        $dNum
                        Multilinear.ListTensor.$fFloatingTensor7 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor6
                   @ a
                   $dFloating
                   (Multilinear.ListTensor.$fFloatingTensor5
                      @ a
                      $dNum
                      (Multilinear.ListTensor.Scalar @ a dt1)
                      eta) }) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor5 ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, Strictness: <L,U(C(U),A,A,A,A,A,A)><S,1*U><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor6 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U> -}
b5c76da201c36836ebbd9bb1e2d87d64
  $fFloatingTensor7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
a33652ecc1956c362f29330e05eaaef9
  $fFloatingTensor8 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor9 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLL),U(U,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 Multilinear.ListTensor.$fFloatingTensor4
                   @ a
                   $dFloating
                   (Multilinear.ListTensor.$fFloatingTensor2 @ a $dFloating eta)) -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$c** ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3,
     Strictness: <L,U(1*U(1*U(C(U),A,C(U),A,A,A,C(U)),A,A,A),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor25 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$cacos ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor19 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$cacosh ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor12 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$casin ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor20 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$casinh ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor13 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$catan ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor18 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$catanh ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor11 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$ccos ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor22 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$ccosh ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor15 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$cexp ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor2 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$cexpm1 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor10 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$clog ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor6 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$clog1mexp ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(S(S(LLLLLLC(S))LLL)LLLLLLLLLLLLLLLLLLLLLL),U(U(U(U,U,U,U,U,U,U),U,U,U),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor1 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$clog1p ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor4 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$clog1pexp ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLLLLLLLLLLLLLL),U(U,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor9 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$clogBase ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3,
     Strictness: <L,U(1*U(A,C(U),A,A),A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor24 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$csin ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor23 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$csinh ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor16 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$csqrt ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(S(LLLC(S))LLLLLLLLLLLLLLLLLLLLLL),U(U(U(C(U),A,C(U),A,A,A,C(U)),A,A,1*C1(U)),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor29 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$ctan ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor21 -}
308e239bd673f098b9054c39581f1f8e
  $fFloatingTensor_$ctanh ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor14 -}
308e239bd673f098b9054c39581f1f8e
  $fFractionalTensor ::
    GHC.Real.Fractional a =>
    GHC.Real.Fractional (Multilinear.ListTensor.Tensor a)
  DFunId
  {- Arity: 1,
     Strictness: <L,U(U(C(U),C(C1(U)),C(U),A,C(U),C(U),C(U)),C(U),A,C(U))>m,
     Unfolding: DFun: @ a ($dFractional :: GHC.Real.Fractional a).
                  @ (Multilinear.ListTensor.Tensor a)
                  (Multilinear.ListTensor.$fFractionalTensor3 @ a $dFractional)
                  (Multilinear.ListTensor.$fFractionalTensor_$c/ @ a $dFractional)
                  (Multilinear.ListTensor.$fFractionalTensor_$crecip
                     @ a
                     $dFractional)
                  (Multilinear.ListTensor.$fFractionalTensor1 @ a $dFractional) -}
308e239bd673f098b9054c39581f1f8e
  $fFractionalTensor1 ::
    GHC.Real.Fractional a =>
    GHC.Real.Rational -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLC(S)),1*U(A,A,A,1*C1(U))><S(SS),1*U(U,U)>m1,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dFractional :: GHC.Real.Fractional a)
                   (x1 :: GHC.Real.Rational) ->
                 case x1 of x2 { GHC.Real.:% ipv ipv1 ->
                 case GHC.Real.fromRational @ a $dFractional x2 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.Scalar @ a dt1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fFractionalTensor2 ::
    GHC.Real.Fractional a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(S(LLLLLLC(S))LLL),U(1*U(A,A,A,A,A,A,1*C1(U)),C(U),A,A)><S,1*U>,
     Unfolding: (\ @ a
                   ($dFractional :: GHC.Real.Fractional a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 case GHC.Num.fromInteger
                        @ a
                        (GHC.Real.$p1Fractional @ a $dFractional)
                        Multilinear.ListTensor.$fFloatingTensor7 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor17
                   @ a
                   $dFractional
                   (Multilinear.ListTensor.Scalar @ a dt1)
                   eta }) -}
308e239bd673f098b9054c39581f1f8e
  $fFractionalTensor3 ::
    GHC.Real.Fractional a =>
    GHC.Num.Num (Multilinear.ListTensor.Tensor a)
  {- Arity: 1,
     Strictness: <L,1*U(1*U(C(U),C(C1(U)),C(U),A,C(U),C(U),C(U)),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dFractional :: GHC.Real.Fractional a) ->
                 Multilinear.ListTensor.$fNumTensor
                   @ a
                   (GHC.Real.$p1Fractional @ a $dFractional)) -}
308e239bd673f098b9054c39581f1f8e
  $fFractionalTensor_$c/ ::
    GHC.Real.Fractional a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, Strictness: <L,U(A,C(U),A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor17 -}
308e239bd673f098b9054c39581f1f8e
  $fFractionalTensor_$crecip ::
    GHC.Real.Fractional a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(S(LLLLLLC(S))LLL),U(1*U(A,A,A,A,A,A,1*C1(U)),C(U),A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFractionalTensor2 -}
308e239bd673f098b9054c39581f1f8e
  $fFunctorTensor :: GHC.Base.Functor Multilinear.ListTensor.Tensor
  DFunId
  {- HasNoCafRefs, Strictness: m,
     Unfolding: DFun:.
                  @ Multilinear.ListTensor.Tensor
                  Multilinear.ListTensor.$fFloatingTensor27
                  Multilinear.ListTensor.$fFunctorTensor1 -}
308e239bd673f098b9054c39581f1f8e
  $fFunctorTensor1 ::
    a
    -> Multilinear.ListTensor.Tensor b
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ b (eta :: a) (eta1 :: Multilinear.ListTensor.Tensor b) ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ b
                   @ a
                   (\ (ds2 :: b) -> eta)
                   eta1) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor ::
    Multilinear.Multilinear Multilinear.ListTensor.Tensor
  DFunId
  {- Unfolding: DFun:.
                  @ Multilinear.ListTensor.Tensor
                  Multilinear.ListTensor.$fMultilinearTensor_$c.+
                  Multilinear.ListTensor.$fMultilinearTensor_$c.-
                  Multilinear.ListTensor.$fMultilinearTensor_$c.*
                  Multilinear.ListTensor.$fMultilinearTensor_$c./
                  Multilinear.ListTensor.$fMultilinearTensor_$c+.
                  Multilinear.ListTensor.$fMultilinearTensor_$c-.
                  Multilinear.ListTensor.$fMultilinearTensor_$c*.
                  Multilinear.ListTensor.$fMultilinearTensor_$c/.
                  Multilinear.ListTensor.$fMultilinearTensor5
                  Multilinear.ListTensor.$fFloatingTensor28
                  Multilinear.ListTensor.$fMultilinearTensor4
                  Multilinear.ListTensor.$fMultilinearTensor3
                  Multilinear.ListTensor.$fMultilinearTensor_$cinverse
                  Multilinear.ListTensor.$fMultilinearTensor_$cconcat
                  Multilinear.ListTensor.$fMultilinearTensor2
                  Multilinear.ListTensor.$fMultilinearTensor1 -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor1 ::
    Multilinear.ListTensor.Tensor a -> GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: Multilinear.ListTensor.Tensor a) ->
                 case Multilinear.ListTensor.$wds @ a w of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor2 ::
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   (t1 :: Multilinear.ListTensor.Tensor a)
                   (t2 :: Multilinear.ListTensor.Tensor a) ->
                 case t2 of t4 { DEFAULT ->
                 (Multilinear.ListTensor.$fMultilinearTensor_go
                    (Multilinear.ListTensor.$fFloatingTensor28 @ a t1)
                    (Multilinear.ListTensor.$fFloatingTensor28 @ a t4))
                   `cast`
                 (Data.Monoid.N:All[0]) }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor3 ::
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor4 ::
    Multilinear.ListTensor.Tensor a
    -> GHC.Base.String
    -> GHC.Base.String
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,1*U><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor5 ::
    Multilinear.ListTensor.Tensor a -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: Multilinear.ListTensor.Tensor a) ->
                 case Multilinear.ListTensor.$wds1 @ a w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$c*. ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> a -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,C(C1(U)),A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (t :: Multilinear.ListTensor.Tensor a)
                   (x1 :: a) ->
                 case t of t1 { DEFAULT ->
                 case x1 of x2 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ a
                   @ a
                   (\ (ds2 :: a) -> GHC.Num.* @ a $dNum ds2 x2)
                   t1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$c+. ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> a -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (t :: Multilinear.ListTensor.Tensor a)
                   (x1 :: a) ->
                 case t of t1 { DEFAULT ->
                 case x1 of x2 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ a
                   @ a
                   (\ (ds2 :: a) -> GHC.Num.+ @ a $dNum ds2 x2)
                   t1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$c-. ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> a -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (t :: Multilinear.ListTensor.Tensor a)
                   (x1 :: a) ->
                 case x1 of x2 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ a
                   @ a
                   (\ (p :: a) ->
                    case p of p1 { DEFAULT -> GHC.Num.- @ a $dNum p1 x2 })
                   t }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$c.* ::
    GHC.Num.Num a =>
    a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLC(S)LLLL),1*U(A,A,1*C1(U),A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (x1 :: a)
                   (t :: Multilinear.ListTensor.Tensor a) ->
                 case x1 of x2 { DEFAULT ->
                 case t of t1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ a
                   @ a
                   (GHC.Num.* @ a $dNum x2)
                   t1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$c.+ ::
    GHC.Num.Num a =>
    a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(S)LLLLLL),1*U(1*C1(U),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (x1 :: a)
                   (t :: Multilinear.ListTensor.Tensor a) ->
                 case x1 of x2 { DEFAULT ->
                 case t of t1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ a
                   @ a
                   (GHC.Num.+ @ a $dNum x2)
                   t1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$c.- ::
    GHC.Num.Num a =>
    a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(S)LLLLL),1*U(A,1*C1(U),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (x1 :: a)
                   (t :: Multilinear.ListTensor.Tensor a) ->
                 case x1 of x2 { DEFAULT ->
                 case t of t1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ a
                   @ a
                   (GHC.Num.- @ a $dNum x2)
                   t1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$c./ ::
    GHC.Real.Fractional a =>
    a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(S)LL),1*U(A,1*C1(U),A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dFractional :: GHC.Real.Fractional a)
                   (x1 :: a)
                   (t :: Multilinear.ListTensor.Tensor a) ->
                 case x1 of x2 { DEFAULT ->
                 case t of t1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ a
                   @ a
                   (GHC.Real./ @ a $dFractional x2)
                   t1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$c/. ::
    GHC.Real.Fractional a =>
    Multilinear.ListTensor.Tensor a
    -> a -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dFractional :: GHC.Real.Fractional a)
                   (t :: Multilinear.ListTensor.Tensor a)
                   (x1 :: a) ->
                 case t of t1 { DEFAULT ->
                 case x1 of x2 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor27
                   @ a
                   @ a
                   (\ (ds2 :: a) -> GHC.Real./ @ a $dFractional ds2 x2)
                   t1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$cconcat ::
    GHC.Types.Char
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*H><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (ds2 :: GHC.Types.Char)
                   (ds3 :: Multilinear.ListTensor.Tensor a)
                   (t :: Multilinear.ListTensor.Tensor a) ->
                 case ds2 of ds4 { GHC.Types.C# ipv ->
                 case ds3 of ds5 { DEFAULT -> t } }) -}
308e239bd673f098b9054c39581f1f8e
  $fMultilinearTensor_$cinverse ::
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a (t :: Multilinear.ListTensor.Tensor a) -> t) -}
d92d98e1ac0f38ea9795f466aa8c2253
  $fMultilinearTensor_go ::
    [Multilinear.Index.TIndex]
    -> [Multilinear.Index.TIndex] -> Data.Monoid.All
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor ::
    GHC.Num.Num a => GHC.Num.Num (Multilinear.ListTensor.Tensor a)
  DFunId
  {- Arity: 1,
     Strictness: <L,U(C(U),C(C1(U)),C(U),A,C(U),C(U),C(U))>m,
     Unfolding: DFun: @ a ($dNum :: GHC.Num.Num a).
                  @ (Multilinear.ListTensor.Tensor a)
                  (Multilinear.ListTensor.$fNumTensor_$c+ @ a $dNum)
                  (Multilinear.ListTensor.$fNumTensor_$c- @ a $dNum)
                  (Multilinear.ListTensor.$fFloatingTensor26 @ a $dNum)
                  (Multilinear.ListTensor.$fNumTensor_$cnegate @ a $dNum)
                  (Multilinear.ListTensor.$fNumTensor_$cabs @ a $dNum)
                  (Multilinear.ListTensor.$fNumTensor_$csignum @ a $dNum)
                  (Multilinear.ListTensor.$fNumTensor1 @ a $dNum) -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor1 ::
    GHC.Num.Num a =>
    GHC.Integer.Type.Integer -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><S,1*U>m1,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) (x1 :: GHC.Integer.Type.Integer) ->
                 case x1 of x2 { DEFAULT ->
                 case GHC.Num.fromInteger @ a $dNum x2 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.Scalar @ a dt1 } }) -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor2 ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,C(U),A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor3 ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,C(U),A,A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor4 ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(LLLLLLC(S)),U(A,C(C1(U)),A,A,A,A,1*C1(U))><S,1*U>,
     Unfolding: (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (eta :: Multilinear.ListTensor.Tensor a) ->
                 case GHC.Num.fromInteger
                        @ a
                        $dNum
                        Multilinear.ListTensor.$fFloatingTensor8 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor3
                   @ a
                   $dNum
                   (Multilinear.ListTensor.Scalar @ a dt1)
                   eta }) -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor_$c+ ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, Strictness: <L,U(C(U),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor5 -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor_$c- ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, Strictness: <L,U(A,C(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor3 -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor_$cabs ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,C(U),A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fNumTensor3 -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor_$cnegate ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2,
     Strictness: <S(LLLLLLC(S)),U(A,C(C1(U)),A,A,A,A,1*C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fNumTensor4 -}
308e239bd673f098b9054c39581f1f8e
  $fNumTensor_$csignum ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,C(U),A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fNumTensor2 -}
308e239bd673f098b9054c39581f1f8e
  $fShowTensor ::
    GHC.Show.Show a => GHC.Show.Show (Multilinear.ListTensor.Tensor a)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,C(U),A)>m,
     Unfolding: DFun: @ a ($dShow :: GHC.Show.Show a).
                  @ (Multilinear.ListTensor.Tensor a)
                  (Multilinear.ListTensor.$fShowTensor_$cshowsPrec @ a $dShow)
                  (Multilinear.ListTensor.$fShowTensor_$cshow @ a $dShow)
                  (Multilinear.ListTensor.$fShowTensor_$cshowList @ a $dShow) -}
308e239bd673f098b9054c39581f1f8e
  $fShowTensor1 ::
    GHC.Show.Show a =>
    [Multilinear.ListTensor.Tensor a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,C(U),A)><S,1*U><L,U>,
     Unfolding: (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Multilinear.ListTensor.Tensor a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Multilinear.ListTensor.Tensor a)
                   (\ (x1 :: Multilinear.ListTensor.Tensor a)
                      (s1 :: GHC.Base.String)[OneShot] ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (Multilinear.ListTensor.$fShowTensor2 @ a $dShow x1)
                      s1)
                   ls
                   s) -}
308e239bd673f098b9054c39581f1f8e
  $fShowTensor2 ::
    GHC.Show.Show a =>
    Multilinear.ListTensor.Tensor a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(A,C(U),A)><S,1*U> -}
308e239bd673f098b9054c39581f1f8e
  $fShowTensor3 ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Multilinear.ListTensor.Tensor a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(A,C(U),A)><L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ds2 :: GHC.Types.Int)
                   (x1 :: Multilinear.ListTensor.Tensor a)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Multilinear.ListTensor.$fShowTensor2 @ a $dShow x1))
                   s) -}
308e239bd673f098b9054c39581f1f8e
  $fShowTensor_$cshow ::
    GHC.Show.Show a =>
    Multilinear.ListTensor.Tensor a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(A,C(U),A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fShowTensor2 -}
308e239bd673f098b9054c39581f1f8e
  $fShowTensor_$cshowList ::
    GHC.Show.Show a =>
    [Multilinear.ListTensor.Tensor a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,C(U),A)><S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fShowTensor1 -}
308e239bd673f098b9054c39581f1f8e
  $fShowTensor_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Multilinear.ListTensor.Tensor a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(A,C(U),A)><L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fShowTensor3 -}
74fe8ee26afef144757b044579ed8fbd
  $tc'Err :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16994910641946218038##
                   14344779062477602406##
                   Multilinear.ListTensor.$trModule
                   Multilinear.ListTensor.$tc'Err1) -}
4ef3c173af4fc06103d4c795d61c4c5b
  $tc'Err1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Err"#) -}
99d6abaccc0fa7eda4faf057fd148cce
  $tc'Scalar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5305295587918108194##
                   5036428475159186812##
                   Multilinear.ListTensor.$trModule
                   Multilinear.ListTensor.$tc'Scalar1) -}
d42d2557c60285592e08ce3bfdbda9f7
  $tc'Scalar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Scalar"#) -}
b6b563040b3c5dcd404a77cbf34a82cc
  $tc'Tensor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6137999924895775066##
                   3052690546666526659##
                   Multilinear.ListTensor.$trModule
                   Multilinear.ListTensor.$tc'Tensor1) -}
9c7fb622e43f758df0ea36743ebd917b
  $tc'Tensor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Tensor"#) -}
5652100a04fa5a9eb7100954b407c5a3
  $tcTensor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   690525464416973785##
                   15702683811237418645##
                   Multilinear.ListTensor.$trModule
                   Multilinear.ListTensor.$tcTensor1) -}
4e3d969eb3386c14e7c264e9c6963750
  $tcTensor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Tensor"#) -}
47ede366c763f7066c0888875cc7d8f4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Multilinear.ListTensor.$trModule2
                   Multilinear.ListTensor.$trModule1) -}
2db0a0b17c40d7180cd0cf7e976a862c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Multilinear.ListTensor"#) -}
c4b840e014d89554f640fdd528fc605a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU"#) -}
308e239bd673f098b9054c39581f1f8e
  $w$cput ::
    Data.Binary.Class.Binary a =>
    Multilinear.ListTensor.Tensor a
    -> (# (), Data.ByteString.Builder.Internal.Builder #)
  {- Arity: 2, Strictness: <L,U(C(U(U,U)),U,A)><S,1*U>,
     Inline: [0] -}
308e239bd673f098b9054c39581f1f8e
  $wcommonIndex ::
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> GHC.Base.Maybe GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Multilinear.ListTensor.Tensor a)
                   (w1 :: Multilinear.ListTensor.Tensor a) ->
                 case w of wild {
                   DEFAULT
                   -> case w1 of t2 { DEFAULT -> GHC.Base.Nothing @ GHC.Base.String }
                   Multilinear.ListTensor.Tensor ds2 ds3
                   -> case w1 of wild1 {
                        DEFAULT -> GHC.Base.Nothing @ GHC.Base.String
                        Multilinear.ListTensor.Tensor ds4 ds5
                        -> case GHC.Base.map
                                  @ Multilinear.Index.TIndex
                                  @ [GHC.Types.Char]
                                  Multilinear.Index.indexName
                                  (Multilinear.ListTensor.$fFloatingTensor28
                                     @ a
                                     wild1) of indicesNames2 { DEFAULT ->
                           case GHC.Base.map
                                  @ Multilinear.Index.TIndex
                                  @ [GHC.Types.Char]
                                  Multilinear.Index.indexName
                                  (Multilinear.ListTensor.$fFloatingTensor28
                                     @ a
                                     wild) of indicesNames1 { DEFAULT ->
                           letrec {
                             go1 :: [[GHC.Types.Char]] -> GHC.Base.Maybe GHC.Base.String
                               {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds6 :: [[GHC.Types.Char]]) ->
                               case ds6 of wild2 {
                                 [] -> GHC.Base.Nothing @ GHC.Base.String
                                 : y ys
                                 -> case y of i { DEFAULT ->
                                    letrec {
                                      go2 :: [GHC.Base.String] -> Data.Monoid.First GHC.Base.String
                                        {- Arity: 1, Strictness: <S,1*U> -}
                                      = \ (ds7 :: [GHC.Base.String]) ->
                                        case ds7 of wild3 {
                                          []
                                          -> (GHC.Base.Nothing @ GHC.Base.String)
                                               `cast`
                                             (Sym (Data.Monoid.N:First[0]) <GHC.Base.String>_N)
                                          : y1 ys1
                                          -> case GHC.Base.eqString y1 i of wild4 {
                                               GHC.Types.False -> go2 ys1
                                               GHC.Types.True
                                               -> (GHC.Base.Just @ GHC.Base.String y1)
                                                    `cast`
                                                  (Sym (Data.Monoid.N:First[0]) <GHC.Base.String>_N) } }
                                    } in
                                    case (go2 indicesNames2)
                                           `cast`
                                         (Data.Monoid.N:First[0] <GHC.Base.String>_N) of wild3 {
                                      GHC.Base.Nothing -> go1 ys GHC.Base.Just ipv -> wild3 } } }
                           } in
                           go1 indicesNames1 } } } }) -}
308e239bd673f098b9054c39581f1f8e
  $wds :: Multilinear.ListTensor.Tensor a -> GHC.Prim.Int#
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
308e239bd673f098b9054c39581f1f8e
  $wds1 ::
    Multilinear.ListTensor.Tensor a
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
6902556bf1281772c8b64cf43755d794
  $wswitchInd ::
    Multilinear.ListTensor.Tensor a
    -> GHC.Base.Maybe GHC.Base.String
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0] -}
308e239bd673f098b9054c39581f1f8e
  $wswitchInd' ::
    Multilinear.ListTensor.Tensor a
    -> GHC.Base.Maybe GHC.Base.String
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0] -}
308e239bd673f098b9054c39581f1f8e
  data Tensor a
    = Scalar {scalarVal :: !a}
    | Tensor {tensorIndex :: !Multilinear.Index.TIndex,
              tensorData :: ![Multilinear.ListTensor.Tensor a]}
    | Err {errMessage :: !GHC.Base.String}
39e936be8fdf3c9a224db81880bf3640
  _dot ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 1, Strictness: <L,U(C(U),A,C(U),A,A,A,C(U))> -}
361c714217496a110e253c8c8332a01f
  commonIndex ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> Multilinear.ListTensor.Tensor a
    -> GHC.Base.Maybe GHC.Base.String
  {- Arity: 3, Strictness: <L,A><S,1*U><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Multilinear.ListTensor.Tensor a)
                   (w2 :: Multilinear.ListTensor.Tensor a) ->
                 Multilinear.ListTensor.$wcommonIndex @ a w1 w2) -}
f9df4181c3a6f07f87e85fbba49d28b5
  errMessage :: Multilinear.ListTensor.Tensor a -> GHC.Base.String
  RecSel Left Multilinear.ListTensor.Tensor
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds2 :: Multilinear.ListTensor.Tensor a) ->
                 case ds2 of wild {
                   DEFAULT -> Multilinear.ListTensor.errMessage1
                   Multilinear.ListTensor.Err ds3 -> ds3 }) -}
507396842c85978733d9e21c74e90a1a
  errMessage1 :: GHC.Base.String
  {- Strictness: x -}
7fb6e440ef411c69b19901d52d41bbc8
  scalarVal :: Multilinear.ListTensor.Tensor a -> a
  RecSel Left Multilinear.ListTensor.Tensor
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds2 :: Multilinear.ListTensor.Tensor a) ->
                 case ds2 of wild {
                   DEFAULT -> Multilinear.ListTensor.scalarVal1 @ a
                   Multilinear.ListTensor.Scalar ds3 -> ds3 }) -}
a95f75eb03277d505564aca92eca58fe
  scalarVal1 :: a
  {- Strictness: x -}
a15041cb8853d193f9ae0b21dc49d7e9
  switchInd ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> GHC.Base.Maybe GHC.Base.String
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, Strictness: <L,A><S,1*U><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Multilinear.ListTensor.Tensor a)
                   (w2 :: GHC.Base.Maybe GHC.Base.String) ->
                 Multilinear.ListTensor.$wswitchInd @ a w1 w2) -}
b5aa158183f62b08a80a70c08192e736
  switchInd' ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor a
    -> GHC.Base.Maybe GHC.Base.String
    -> Multilinear.ListTensor.Tensor a
  {- Arity: 3, Strictness: <L,A><S,1*U><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Multilinear.ListTensor.Tensor a)
                   (w2 :: GHC.Base.Maybe GHC.Base.String) ->
                 Multilinear.ListTensor.$wswitchInd' @ a w1 w2) -}
0b5b82a5a26f48830558ab952ad1667a
  tensorData ::
    Multilinear.ListTensor.Tensor a
    -> [Multilinear.ListTensor.Tensor a]
  RecSel Left Multilinear.ListTensor.Tensor
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds2 :: Multilinear.ListTensor.Tensor a) ->
                 case ds2 of wild {
                   DEFAULT -> Multilinear.ListTensor.tensorData1 @ a
                   Multilinear.ListTensor.Tensor ds3 ds4 -> ds4 }) -}
eed09eec590cff3c0ae082932d7c4ea5
  tensorData1 :: [Multilinear.ListTensor.Tensor a]
  {- Strictness: x -}
62c2a6c1679d29632638aa94ba73ef8d
  tensorIndex ::
    Multilinear.ListTensor.Tensor a -> Multilinear.Index.TIndex
  RecSel Left Multilinear.ListTensor.Tensor
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds2 :: Multilinear.ListTensor.Tensor a) ->
                 case ds2 of wild {
                   DEFAULT -> Multilinear.ListTensor.tensorIndex1
                   Multilinear.ListTensor.Tensor ds3 ds4 -> ds3 }) -}
7e703e97e6befc446e5390edcac2b43e
  tensorIndex1 :: Multilinear.Index.TIndex
  {- Strictness: x -}
instance [safe] Data.Binary.Class.Binary [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fBinaryTensor
instance [safe] GHC.Classes.Eq [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fEqTensor
instance [safe] GHC.Float.Floating [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fFloatingTensor
instance [safe] GHC.Real.Fractional [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fFractionalTensor
instance [safe] GHC.Base.Functor [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fFunctorTensor
instance [safe] Multilinear.Multilinear [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fMultilinearTensor
instance [safe] GHC.Num.Num [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fNumTensor
instance [safe] GHC.Show.Show [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fShowTensor
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

