
==================== FINAL INTERFACE ====================
2017-03-08 08:36:09.4493892 UTC

interface main@main:Main 8002
  interface hash: 6e9dd03b7400ca0c228fe26c59e23165
  ABI hash: 81c51d83b34b84915206e4c07cd1bac6
  export-list hash: 2d6bf477379ef42ffde40e0e9560c0f8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 44807d58ed47a0482913eefa2ba073a9
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Multilinear-0.1.0.0@Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  Multilinear-0.1.0.0@Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU:Multilinear 6feea61a9bce4887202f99e5c67e433c
import  -/  Multilinear-0.1.0.0@Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU:Multilinear.ListTensor 79ba5a8eeff160a1aa1d9fea82ad766a
import  -/  Multilinear-0.1.0.0@Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU:Multilinear.Tensor 7d38fa934da41aeb31ca6ba6db4a931e
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
834a705b06eab46d276b4d07e135a247
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
29598565e437895dadf69b52f1a07096
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main25
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main3
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv2 } }) -}
8215ac63d9131df053ce8192ba9565dc
  main10 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main11
                   (GHC.Types.[] @ GHC.Types.Int)) -}
058ddd275ccefba952161f1aea83bea8
  main11 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 500#) -}
461ad6bfd1542320f28371b7a5f25bcc
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "k"#) -}
481302298c67903c86ba9ef598d5dbb7
  main13 ::
    (GHC.Base.String, [GHC.Types.Int])
    -> (GHC.Base.String, [GHC.Types.Int])
    -> ([GHC.Types.Int] -> [GHC.Types.Int] -> GHC.Types.Int)
    -> Multilinear.ListTensor.Tensor GHC.Types.Int GHC.Types.Int
  {- Unfolding: (Multilinear.Tensor.tensor
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   GHC.Show.$fShowInt
                   GHC.Real.$fIntegralInt) -}
2cfaae054b529292e43a4ba6c0780feb
  main14 :: Multilinear.ListTensor.Tensor GHC.Types.Int GHC.Types.Int
  {- Unfolding: (Multilinear.ListTensor.$wds22
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   GHC.Show.$fShowInt
                   GHC.Real.$fIntegralInt
                   GHC.Num.$fNumInt
                   Main.main20
                   Main.main15) -}
56dff03af3e5b23fd366eed2ceae2226
  main15 :: Multilinear.ListTensor.Tensor GHC.Types.Int GHC.Types.Int
  {- Unfolding: (Main.main13 Main.main18 Main.main9 Main.main16) -}
bf75d8b7d94d3895528f78176f52387c
  main16 :: [GHC.Types.Int] -> [GHC.Types.Int] -> GHC.Types.Int
  {- Arity: 2,
     Unfolding: (\ (ds :: [GHC.Types.Int]) (ds1 :: [GHC.Types.Int]) ->
                 case ds of wild {
                   [] -> Main.main17
                   : i ds2
                   -> case ds2 of wild1 {
                        []
                        -> case ds1 of wild2 {
                             [] -> Main.main17
                             : j ds3
                             -> case ds3 of wild3 {
                                  [] -> GHC.Num.$fNumInt_$c+ i j : ipv ipv1 -> Main.main17 } }
                        : ipv ipv1 -> Main.main17 } }) -}
d7b406242e92767195e0391584a1a25d
  main17 :: GHC.Types.Int
  {- Strictness: x -}
680019f5cf4966eb5ba39b103401d535
  main18 :: ([GHC.Types.Char], [GHC.Types.Int])
  {- Unfolding: ((Main.main19, Main.main10)) -}
33ff29bc3e38ede0ea66d7afadfceec2
  main19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "j"#) -}
0b2d7c6de626649ae9b52f6ba0ab79e2
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "End."#) -}
8cb967fdab846b56b4485b6f9f4d6311
  main20 :: Multilinear.ListTensor.Tensor GHC.Types.Int GHC.Types.Int
  {- Unfolding: (Main.main13 Main.main23 Main.main18 Main.main21) -}
e0af0fca78b0acdfc3be7e50dfa69d68
  main21 :: [GHC.Types.Int] -> [GHC.Types.Int] -> GHC.Types.Int
  {- Arity: 2,
     Unfolding: (\ (ds :: [GHC.Types.Int]) (ds1 :: [GHC.Types.Int]) ->
                 case ds of wild {
                   [] -> Main.main22
                   : i ds2
                   -> case ds2 of wild1 {
                        []
                        -> case ds1 of wild2 {
                             [] -> Main.main22
                             : j ds3
                             -> case ds3 of wild3 {
                                  [] -> GHC.Num.$fNumInt_$c+ i j : ipv ipv1 -> Main.main22 } }
                        : ipv ipv1 -> Main.main22 } }) -}
5c486bb7d66fd19d7826b347198eaf65
  main22 :: GHC.Types.Int
  {- Strictness: x -}
75e41a47106c0581197b3159a03414fe
  main23 :: ([GHC.Types.Char], [GHC.Types.Int])
  {- Unfolding: ((Main.main24, Main.main10)) -}
1e8e8ea0ab4c14039cb1ec804c80f87b
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "i"#) -}
ceadc3439962eab8ad80d4e7bbb2242c
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Start..."#) -}
fc5924e4fe57830879f7abf2e15a9c57
  main26 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
01162cf1a52bdec464663fd37a25bdfe
  main3 :: GHC.Base.String
  {- Unfolding: (Multilinear.ListTensor.$fShowTensor2
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   GHC.Show.$fShowInt
                   GHC.Show.$fShowInt
                   Main.main4) -}
efbc8e5bf10b0f153c8173f21c30263b
  main4 :: Multilinear.ListTensor.Tensor GHC.Types.Int GHC.Types.Int
  {- Unfolding: (Multilinear.ListTensor.$wds22
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   GHC.Show.$fShowInt
                   GHC.Real.$fIntegralInt
                   GHC.Num.$fNumInt
                   Main.main14
                   Main.main5) -}
2143e64dde1979a1793732ced8c2dac2
  main5 :: Multilinear.ListTensor.Tensor GHC.Types.Int GHC.Types.Int
  {- Unfolding: (Main.main13 Main.main9 Main.main8 Main.main6) -}
92144ab31eb928a9d7661b039575a002
  main6 :: [GHC.Types.Int] -> [GHC.Types.Int] -> GHC.Types.Int
  {- Arity: 2,
     Unfolding: (\ (ds :: [GHC.Types.Int]) (ds1 :: [GHC.Types.Int]) ->
                 case ds of wild {
                   [] -> Main.main7
                   : k ds2
                   -> case ds2 of wild1 { [] -> k : ipv ipv1 -> Main.main7 } }) -}
f4769928fb896e0793dede73a4658451
  main7 :: GHC.Types.Int
  {- Strictness: x -}
30b60f892c915c2d46b5054da15ffa0d
  main8 :: ([GHC.Types.Char], [GHC.Types.Int])
  {- HasNoCafRefs,
     Unfolding: ((GHC.Types.[] @ GHC.Types.Char,
                  GHC.Types.[] @ GHC.Types.Int)) -}
b8aa7869acbc93e80f076e569ba69419
  main9 :: ([GHC.Types.Char], [GHC.Types.Int])
  {- Unfolding: ((Main.main12, Main.main10)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

