
==================== FINAL INTERFACE ====================
2017-03-08 13:10:33.7732161 UTC

interface Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU:Multilinear.Form 8002
  interface hash: e6379598c9638428e834178fa6d96c24
  ABI hash: f321cd0b647dc706278bc6074c2be8be
  export-list hash: 43fa4a0109c133a1b1172427d5dafff5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d421a442bac5348a67fd3f91398c6034
  sig of: Nothing
  used TH splices: False
  where
exports:
  Multilinear.Form.elf
  Multilinear.Form.form
module dependencies: Multilinear.Index Multilinear.ListTensor
                     Multilinear.Operations
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  Multilinear.Index ff73d2761af0be0de22b54b7d68b02b1
  Covariant 16da5fe1147889248667555c02800759
import  -/  Multilinear.ListTensor ce7dceec1f296136e193ca4eec1092fc
  exports: 21ba8672b49c8e662b8221a66ae7512b
  Err 36db548ded0473322b6bc9841e081fbf
  Scalar 424db0c2d2ac3d55deaf0fbb824b807f
  Tensor 7327cf8b84d3375b94c5c32a9e110ecd
  Tensor db682abd7ee3719e4ed0464e1e8be9a5
  scalarVal 03cbfbdf6e3361f57391edf149fa379e
import  -/  Multilinear.Operations 070c8dcc0456fd44e8ed76de7042572b
  ! d892338a84c0ded6ef3a69ec0f1d1307
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Err 20faef8829fd13c027d0ee2213637534
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
8ac16c1ac22c6d2831d514a98b664935
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Multilinear.Form.$trModule2
                   Multilinear.Form.$trModule1) -}
4f9887b475c21c199f8b44a894fba250
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Multilinear.Form"#) -}
acaf4965cfb1f8ef5d7d510c49aea9fb
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU"#) -}
34a11123ed9885198eead5031f5b92cc
  $wform ::
    GHC.Real.Integral i =>
    [GHC.Types.Char]
    -> i -> (i -> a) -> Multilinear.ListTensor.Tensor i a
  {- Arity: 1, Strictness: <L,U(1*U,1*U,A,A,A,A,A,A,A)>, Inline: [0],
     Unfolding: (\ @ i @ a (w :: GHC.Real.Integral i) ->
                 let {
                   $dEnum :: GHC.Enum.Enum i = GHC.Real.$p2Integral @ i w
                 } in
                 let {
                   $dReal :: GHC.Real.Real i = GHC.Real.$p1Integral @ i w
                 } in
                 let {
                   $dNum :: GHC.Num.Num i = GHC.Real.$p1Real @ i $dReal
                 } in
                 let {
                   lvl16 :: i = GHC.Num.fromInteger @ i $dNum Multilinear.Form.form3
                 } in
                 let {
                   lvl17 :: i = GHC.Num.fromInteger @ i $dNum Multilinear.Form.form2
                 } in
                 \ (ds :: [GHC.Types.Char]) (s :: i) (f :: i -> a) ->
                 case ds of wild {
                   [] -> Multilinear.Form.form1 @ i @ a
                   : d ds1
                   -> case ds1 of wild1 {
                        []
                        -> case s of s1 { DEFAULT ->
                           case f of f1 { DEFAULT ->
                           letrec {
                             go :: [i] -> [Multilinear.ListTensor.Tensor i a]
                               {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds2 :: [i]) ->
                               case ds2 of wild2 {
                                 [] -> GHC.Types.[] @ (Multilinear.ListTensor.Tensor i a)
                                 : y ys
                                 -> case y of ds3 { DEFAULT ->
                                    GHC.Types.:
                                      @ (Multilinear.ListTensor.Tensor i a)
                                      (case f1 ds3 of dt { DEFAULT ->
                                       Multilinear.ListTensor.Scalar @ i @ a dt })
                                      (go ys) } }
                           } in
                           case go
                                  (GHC.Enum.enumFromTo
                                     @ i
                                     $dEnum
                                     lvl16
                                     (GHC.Num.- @ i $dNum s1 lvl17)) of dt { DEFAULT ->
                           Multilinear.ListTensor.Tensor
                             @ i
                             @ a
                             (Multilinear.Index.Covariant
                                @ i
                                s1
                                (GHC.Types.: @ GHC.Types.Char d (GHC.Types.[] @ GHC.Types.Char)))
                             dt } } }
                        : ipv ipv1 -> Multilinear.Form.form1 @ i @ a } }) -}
3dcb5eb5f97a2ba9968714b470da4a3c
  elf ::
    GHC.Real.Integral i => Multilinear.ListTensor.Tensor i a -> i -> a
  {- Arity: 3,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><S,1*U><S,1*U>,
     Unfolding: (\ @ i
                   @ a
                   ($dIntegral :: GHC.Real.Integral i)
                   (ds :: Multilinear.ListTensor.Tensor i a)
                   (ds1 :: i) ->
                 case ds of wild {
                   Multilinear.ListTensor.Scalar ipv -> Multilinear.Form.elf2 @ a
                   Multilinear.ListTensor.Tensor ds2 ds3
                   -> case ds2 of wild1 {
                        DEFAULT -> Multilinear.Form.elf2 @ a
                        Multilinear.Index.Covariant ds4 ds5
                        -> case ds1 of ds6 { DEFAULT ->
                           case GHC.Integer.Type.integerToInt
                                  (GHC.Real.toInteger @ i $dIntegral ds6) of wild2 { DEFAULT ->
                           case GHC.List.$w!!
                                  @ (Multilinear.ListTensor.Tensor i a)
                                  ds3
                                  wild2 of wild3 {
                             DEFAULT -> Multilinear.ListTensor.scalarVal1 @ a
                             Multilinear.ListTensor.Scalar ds7 -> ds7 } } } }
                   Multilinear.ListTensor.Err msg
                   -> Multilinear.Form.elf1 @ a msg }) -}
5fdccce7d310c9a1cc6114ffa2f1defd
  elf1 :: GHC.Base.String -> a
  {- Arity: 1, Strictness: <L,U>x -}
d7359df2a13d3dbc8ee7412a04838eec
  elf2 :: a
  {- Strictness: x -}
1ab24961f27fee33424c00b3d41c90c3
  form ::
    (GHC.Show.Show i, GHC.Real.Integral i) =>
    GHC.Base.String
    -> i -> (i -> a) -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, Strictness: <L,A><L,U(1*U,1*U,A,A,A,A,A,A,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ i @ a (w :: GHC.Show.Show i) (w1 :: GHC.Real.Integral i) ->
                 Multilinear.Form.$wform @ i @ a w1) -}
35f81cf9306b538ed6f6a169e2a9abef
  form1 :: Multilinear.ListTensor.Tensor i a
  {- Strictness: x -}
57e0357d60caa89be455ee06947386d9
  form2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
6b08bd402fdbf8fee290cbb77f0de0b0
  form3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

