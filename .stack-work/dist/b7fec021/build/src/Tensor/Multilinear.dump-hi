
==================== FINAL INTERFACE ====================
2017-01-18 21:56:28.9589478 UTC

interface Tensor-0.1.0.0-K5QdifOX00t2w9C27ImRWh:Tensor.Multilinear 8001
  interface hash: 0c2e9caef890408ccced9c69f93a6e33
  ABI hash: 300bb48a7ab08cf6176b08c588ef5d7b
  export-list hash: 26f481e4d611bea5f7dc5876a98cf5e8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 11c1d53d86ff1fc48fbbf191e9636203
  sig of: Nothing
  used TH splices: False
  where
exports:
  Tensor.Multilinear.Multilinear{Tensor.Multilinear.!! Tensor.Multilinear.!* Tensor.Multilinear.!==! Tensor.Multilinear.++ Tensor.Multilinear.concat Tensor.Multilinear.elems Tensor.Multilinear.equiv Tensor.Multilinear.fromList Tensor.Multilinear.generate Tensor.Multilinear.indices Tensor.Multilinear.order Tensor.Multilinear.rename Tensor.Multilinear.transpose Tensor.Multilinear.transpose1}
module dependencies: Tensor.Index
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  Tensor.Index 6bdc44f3d1849d0934612a9de4da6cc7
  exports: 3e404e500ff97a25d44a7567729a4ffe
  TIndex 2caa73acff6840ac777cf2a549dfd2e0
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
fixities infixl 8 !*, infixl 6 !==!, infixl 3 ++
29fbaea93fec17287bb634a0870d6f92
  $dm!==! ::
    Tensor.Multilinear.Multilinear t =>
    forall a. t a -> t a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLC(C(S))LLLLL),1*U(A,A,A,A,A,A,A,A,A,1*C1(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (t :: * -> *)
                   ($dMultilinear :: Tensor.Multilinear.Multilinear t)
                   @ a
                   (t1 :: t a)
                   (t2 :: t a) ->
                 case t1 of t4 { DEFAULT ->
                 case t2 of t5 { DEFAULT ->
                 Tensor.Multilinear.equiv @ t $dMultilinear @ a t4 t5 } }) -}
ab0bcfeb11565f2f5a7ae86225786a64
  $dm++ ::
    Tensor.Multilinear.Multilinear t =>
    forall a. Tensor.Index.TIndex -> t a -> t a -> t a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSL),U(A,A,A,A,A,A,A,A,A,A,A,A,A,U,A)>,
     Unfolding: InlineRule (0, True, True) Tensor.Multilinear.concat -}
02da9f9d007ab7d2293c17d74acf4fb5
  $tc'C:Multilinear :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10893191402584902524##
                   6688227838908502196##
                   Tensor.Multilinear.$trModule
                   Tensor.Multilinear.$tc'C:Multilinear1) -}
035030e461e71f4ae3503ede90264a3b
  $tc'C:Multilinear1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:Multilinear"#) -}
a291026682125e64ca997a81632ac8ba
  $tcMultilinear :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4499496867548186216##
                   3679023649705707733##
                   Tensor.Multilinear.$trModule
                   Tensor.Multilinear.$tcMultilinear1) -}
e4a038d43122723877c4f051f5c7cd42
  $tcMultilinear1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Multilinear"#) -}
8111179cf39cfb0e564c0ec8cee44775
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Tensor.Multilinear.$trModule2
                   Tensor.Multilinear.$trModule1) -}
45f8ae7951cb604bde4afc0a85ecd0ac
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Tensor.Multilinear"#) -}
b2ed881c25fce28521a6fda376c45e1f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Tensor-0.1.0.0-K5QdifOX00t2w9C27ImRWh"#) -}
188043c18cfd402ee9da44ff088dc397
  class GHC.Base.Functor t => Multilinear (t :: * -> *) where
    (!!) :: t a -> GHC.Types.Int -> t a
    (!*) :: GHC.Num.Num a => t a -> t a -> t a
    generate :: Tensor.Index.TIndex -> (GHC.Types.Int -> t a) -> t a
    fromList :: Tensor.Index.TIndex -> [a] -> t a
    order :: t a -> (GHC.Types.Int, GHC.Types.Int)
    elems :: t a -> GHC.Types.Int
    indices :: t a -> [Tensor.Index.TIndex]
    rename :: t a -> GHC.Base.String -> GHC.Base.String -> t a
    equiv :: t a -> t a -> GHC.Types.Bool
    (!==!) :: t a -> t a -> GHC.Types.Bool
    transpose :: t a -> t a
    transpose1 :: t a -> t a
    concat :: Tensor.Index.TIndex -> t a -> t a -> t a
    (++) :: Tensor.Index.TIndex -> t a -> t a -> t a
    {-# MINIMAL (!!), (!*), generate, fromList, order, elems, indices,
                rename, equiv, transpose, transpose1, concat #-}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

