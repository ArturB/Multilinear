
==================== FINAL INTERFACE ====================
2017-03-07 12:41:26.6180739 UTC

interface Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU:Multilinear.ListTensor 8002
  interface hash: c3bbb3cd7e8e9b7f4e88b9687693788e
  ABI hash: 79ba5a8eeff160a1aa1d9fea82ad766a
  export-list hash: ddd81772a3c709b060fefc4962663eb7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d421a442bac5348a67fd3f91398c6034
  sig of: Nothing
  used TH splices: False
  where
exports:
  Multilinear.Index.!=!
  Multilinear.Index.equivI
  Multilinear.ListTensor._dot
  Multilinear.ListTensor.commonIndex
  Multilinear.ListTensor.switchInd
  Multilinear.ListTensor.switchInd'
  Multilinear.Index.TIndex{Multilinear.Index.Contravariant Multilinear.Index.Covariant Multilinear.Index.Indifferent indexCount indexName}
  Multilinear.ListTensor.Tensor{Multilinear.ListTensor.Err Multilinear.ListTensor.Scalar Multilinear.ListTensor.Tensor errMessage scalarVal tensorData tensorIndex}
module dependencies: Multilinear.Index Multilinear.Operations
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0*
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  Multilinear.Index ff73d2761af0be0de22b54b7d68b02b1
  exports: 480060e0b08455ffef717b127d57d7f9
  !=! 79ed98e0d5f11e1d4e005cb01471ead9
  Contravariant 2680d4713bab913b467ff0d038d4a33d
  Covariant 16da5fe1147889248667555c02800759
  Indifferent 7f94d9b535305244b12b6e615aa26100
  TIndex 48f8ee88f7f9a97b4b06621968312cde
  equivI 7e19baab020695e36b536396a839a761
  indexCount 49c023e428a00d7dca1693a4affbb696
  indexName 13bb28b4dd79fe499c2d343e0b2cd53b
import  -/  Multilinear.Operations 5f452ebcd5ea401c9b6224bb7dea7be6
  exports: 0256d389d11297b144ccf71dffaa2450
  Multilinear db59ac4e784384516d08ab9b5fda7108
  elems 7896921073734aeb445479eb9e116843
  indices 5f0b1f1d7f000a89293ffbe1fdd90e07
  order ac97b4375ab2516b046656b5c93fc5d4
  rename ec744e478f1589980d3d9f173fd257c4
  transpose e766a820159d7accc4f2b4fd3d16fd64
import  -/  base-4.9.1.0:Control.Monad f915f187cea611986ebb12dbc69279ab
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:Data.List 7349774f430841349c90dfd1144aea97
import  -/  base-4.9.1.0:Data.Maybe ecf0c6f81372d9b58b142d5e758ea51b
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Float b620368aab866c2bb9d3a0a459566b84
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  binary-0.8.3.0@binary-0.8.3.0:Data.Binary 471a6fe52b2904efddd28a463c9c8819
import  -/  binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Class 26b921856884ebf3fa980365efaa2264
import  -/  binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Get.Internal 8b5079286a0c6818c089632e1030a3ea
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
b1bce1931c788ab8b744f827a7a88135
  (!*!) ::
    (GHC.Real.Integral i, GHC.Show.Show i, GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(A,C(U),A)><L,U(C(U),A,C(U),A,A,A,C(U))><S,1*U><S,1*U> -}
b1bce1931c788ab8b744f827a7a88135
  $fBinaryTensor ::
    (Data.Binary.Class.Binary i, Data.Binary.Class.Binary a) =>
    Data.Binary.Class.Binary (Multilinear.ListTensor.Tensor i a)
  DFunId
  {- Arity: 2, Strictness: <L,U(C(U(A,U)),U,A)><L,U(C(U(U,U)),U,A)>m,
     Unfolding: DFun: @ i
                      @ a
                      ($dBinary :: Data.Binary.Class.Binary i)
                      ($dBinary1 :: Data.Binary.Class.Binary a).
                  @ (Multilinear.ListTensor.Tensor i a)
                  (Multilinear.ListTensor.$fBinaryTensor_$cput
                     @ i
                     @ a
                     $dBinary
                     $dBinary1)
                  (Multilinear.ListTensor.$fBinaryTensor_$cget
                     @ i
                     @ a
                     $dBinary
                     $dBinary1)
                  (Multilinear.ListTensor.$fBinaryTensor_$cputList
                     @ i
                     @ a
                     $dBinary
                     $dBinary1) -}
b1bce1931c788ab8b744f827a7a88135
  $fBinaryTensor1 ::
    (Data.Binary.Class.Binary i, Data.Binary.Class.Binary a) =>
    [Multilinear.ListTensor.Tensor i a] -> Data.Binary.Put.Put
  {- Arity: 2,
     Strictness: <L,U(C(U(A,U)),U,A)><L,U(C(U(U,U)),U,A)> -}
b1bce1931c788ab8b744f827a7a88135
  $fBinaryTensor2 ::
    (Data.Binary.Class.Binary i, Data.Binary.Class.Binary a) =>
    Data.Binary.Get.Internal.Get (Multilinear.ListTensor.Tensor i a)
  {- Arity: 2,
     Strictness: <L,U(C(U(A,U)),U,A)><L,U(C(U(U,U)),U,A)> -}
b1bce1931c788ab8b744f827a7a88135
  $fBinaryTensor_$cget ::
    (Data.Binary.Class.Binary i, Data.Binary.Class.Binary a) =>
    Data.Binary.Get.Internal.Get (Multilinear.ListTensor.Tensor i a)
  {- Arity: 2, Strictness: <L,U(C(U(A,U)),U,A)><L,U(C(U(U,U)),U,A)>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fBinaryTensor2 -}
b1bce1931c788ab8b744f827a7a88135
  $fBinaryTensor_$cput ::
    (Data.Binary.Class.Binary i, Data.Binary.Class.Binary a) =>
    Multilinear.ListTensor.Tensor i a -> Data.Binary.Put.Put
  {- Arity: 3,
     Strictness: <L,U(C(U(A,U)),U,A)><L,U(C(U(U,U)),U,A)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ i
                   @ a
                   (w :: Data.Binary.Class.Binary i)
                   (w1 :: Data.Binary.Class.Binary a)
                   (w2 :: Multilinear.ListTensor.Tensor i a) ->
                 case Multilinear.ListTensor.$w$cput
                        @ i
                        @ a
                        w
                        w1
                        w2 of ww { (#,#) ww1 ww2 ->
                 (Data.Binary.Put.PairS @ () ww1 ww2)
                   `cast`
                 (Sym (Data.Binary.Put.N:PutM[0]) <()>_N) }) -}
b1bce1931c788ab8b744f827a7a88135
  $fBinaryTensor_$cputList ::
    (Data.Binary.Class.Binary i, Data.Binary.Class.Binary a) =>
    [Multilinear.ListTensor.Tensor i a] -> Data.Binary.Put.Put
  {- Arity: 2, Strictness: <L,U(C(U(A,U)),U,A)><L,U(C(U(U,U)),U,A)>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fBinaryTensor1 -}
b1bce1931c788ab8b744f827a7a88135
  $fEqTensor ::
    (GHC.Classes.Eq i, GHC.Classes.Eq a) =>
    GHC.Classes.Eq (Multilinear.ListTensor.Tensor i a)
  DFunId
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(C(C1(U)),A)>m,
     Unfolding: DFun: @ i
                      @ a
                      ($dEq :: GHC.Classes.Eq i)
                      ($dEq1 :: GHC.Classes.Eq a).
                  @ (Multilinear.ListTensor.Tensor i a)
                  (Multilinear.ListTensor.$fEqTensor_$c== @ i @ a $dEq $dEq1)
                  (Multilinear.ListTensor.$fEqTensor_$c/= @ i @ a $dEq $dEq1) -}
b1bce1931c788ab8b744f827a7a88135
  $fEqTensor1 ::
    (GHC.Classes.Eq i, GHC.Classes.Eq a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><S,1*U><S,1*U> -}
b1bce1931c788ab8b744f827a7a88135
  $fEqTensor2 ::
    (GHC.Classes.Eq i, GHC.Classes.Eq a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(C(C1(U)),A)> -}
b1bce1931c788ab8b744f827a7a88135
  $fEqTensor_$c/= ::
    (GHC.Classes.Eq i, GHC.Classes.Eq a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fEqTensor1 -}
b1bce1931c788ab8b744f827a7a88135
  $fEqTensor_$c== ::
    (GHC.Classes.Eq i, GHC.Classes.Eq a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(C(C1(U)),A)>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fEqTensor2 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    GHC.Float.Floating (Multilinear.ListTensor.Tensor i a)
  DFunId
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(U(U(U,U,U,U,U,U,U),U,U,U),1*U,C(U),C(U),A,A,A,C(U),C(U),A,C(U),C(U),C(U),C(U),C(U),A,C(U),C(U),C(U),A,A,A,A)>,
     Unfolding: DFun: @ i
                      @ a
                      ($dEq :: GHC.Classes.Eq i)
                      ($dShow :: GHC.Show.Show i)
                      ($dIntegral :: GHC.Real.Integral i)
                      ($dFloating :: GHC.Float.Floating a).
                  @ (Multilinear.ListTensor.Tensor i a)
                  (Multilinear.ListTensor.$fFloatingTensor29
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor28
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$cexp
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clog
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$csqrt
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$c**
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clogBase
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$csin
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$ccos
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$ctan
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$casin
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$cacos
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$catan
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$csinh
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$ccosh
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$ctanh
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$casinh
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$cacosh
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$catanh
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clog1p
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$cexpm1
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clog1pexp
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating)
                  (Multilinear.ListTensor.$fFloatingTensor_$clog1mexp
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFloating) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor1 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(S(S(LLLLLLC(S))LLL)LLLLLLLLLLLLLLLLLLLLLL),U(U(U(U,U,U,U,U,U,U),U,U,U),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds @ i @ a w w1 w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor10 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds9 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor11 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds10 @ i @ a w w1 w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor12 ::
    (a -> b)
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i b
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor13 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds11 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor14 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds12 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor15 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds14 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor16 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds15 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor17 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds16 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor18 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds17 @ i @ a w w1 w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor19 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds18 @ i @ a w3 w4) -}
5be8aa202ffe4386d5ddd16122cf0dcb
  $fFloatingTensor2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor20 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds19 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor21 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(1*U(A,C(U),A,A),A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a)
                   (w5 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds20 @ i @ a w w1 w3 w4 w5) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor22 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,A><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(1*U(1*U(C(U),A,C(U),A,A,A,C(U)),A,A,A),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a)
                   (w5 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds21 @ i @ a w1 w2 w3 w4 w5) -}
c9386726a5a0a117d3d865a29f468a02
  $fFloatingTensor23 :: Multilinear.Index.TIndex i
  {- Strictness: x -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor24 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,A><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><S(S(LLLC(S))LLLLLLLLLLLLLLLLLLLLLL),U(U(U(C(U),A,C(U),A,A,A,C(U)),A,A,1*C1(U)),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds23 @ i @ a w1 w2 w3 w4) -}
87fd9449aed70129069dde47eb1b3f33
  $fFloatingTensor25 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- HasNoCafRefs,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   Multilinear.ListTensor.$fFloatingTensor2
                   Multilinear.ListTensor.$fFloatingTensor26) -}
e6debd0eccd97b48de936ec994dfaca3
  $fFloatingTensor26 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor27 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds5 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor28 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><S(LSLLLLLLLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m1,
     Unfolding: InlineRule (4, True, False)
                (\ @ i
                   @ a
                   ($dEq :: GHC.Classes.Eq i)
                   ($dShow :: GHC.Show.Show i)
                   ($dIntegral :: GHC.Real.Integral i)
                   ($dFloating :: GHC.Float.Floating a) ->
                 case GHC.Float.pi @ a $dFloating of dt1 { DEFAULT ->
                 Multilinear.ListTensor.Scalar @ i @ a dt1 }) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor29 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    GHC.Real.Fractional (Multilinear.ListTensor.Tensor i a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,1*U(1*U(U(C(U),C(C1(U)),C(U),A,C(U),C(U),C(U)),C(U),A,C(U)),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (4, True, False)
                (\ @ i
                   @ a
                   ($dEq :: GHC.Classes.Eq i)
                   ($dShow :: GHC.Show.Show i)
                   ($dIntegral :: GHC.Real.Integral i)
                   ($dFloating :: GHC.Float.Floating a) ->
                 Multilinear.ListTensor.$fFractionalTensor
                   @ i
                   @ a
                   $dEq
                   $dShow
                   $dIntegral
                   (GHC.Float.$p1Floating @ a $dFloating)) -}
dcaa9c8a6effed4f8d95e8204fd8b3ba
  $fFloatingTensor3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor4 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(SLLLLLLLLLLLLLLLLLLLLLL),U(U,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ i
                   @ a
                   ($dEq :: GHC.Classes.Eq i)
                   ($dShow :: GHC.Show.Show i)
                   ($dIntegral :: GHC.Real.Integral i)
                   ($dFloating :: GHC.Float.Floating a)
                   (eta :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$fFloatingTensor6
                   @ i
                   @ a
                   $dEq
                   $dShow
                   $dIntegral
                   $dFloating
                   (Multilinear.ListTensor.$fFloatingTensor5
                      @ i
                      @ a
                      $dEq
                      $dShow
                      $dIntegral
                      $dFloating
                      eta)) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor5 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds1 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor6 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds3 @ i @ a w w1 w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor7 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds6 @ i @ a w w1 w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor8 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds7 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor9 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Float.Floating a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds8 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$c** ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,A><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(1*U(1*U(C(U),A,C(U),A,A,A,C(U)),A,A,A),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor22 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$cacos ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor16 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$cacosh ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor9 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$casin ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor17 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$casinh ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor10 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$catan ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor15 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$catanh ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor8 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$ccos ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor19 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$ccosh ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor13 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$cexp ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor5 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$cexpm1 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor7 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$clog ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor27 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$clog1mexp ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(S(S(LLLLLLC(S))LLL)LLLLLLLLLLLLLLLLLLLLLL),U(U(U(U,U,U,U,U,U,U),U,U,U),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor1 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$clog1p ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor6 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$clog1pexp ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(SLLLLLLLLLLLLLLLLLLLLLL),U(U,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor4 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$clogBase ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(1*U(A,C(U),A,A),A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor21 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$csin ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor20 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$csinh ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor14 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$csqrt ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,A><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><S(S(LLLC(S))LLLLLLLLLLLLLLLLLLLLLL),U(U(U(C(U),A,C(U),A,A,A,C(U)),A,A,1*C1(U)),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor24 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$ctan ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor18 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$ctanh ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFloatingTensor11 -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$s$wds ::
    Multilinear.ListTensor.Tensor i a
    -> a
    -> (GHC.Real.Fractional a, GHC.Show.Show i, GHC.Classes.Eq i) =>
       Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U(A,C(U),A,A)><L,U(A,C(U),A)><L,U(C(C1(U)),A)>,
     Unfolding: (\ @ a
                   @ i
                   (sc :: Multilinear.ListTensor.Tensor i a)
                   (sc1 :: a)
                   (sc2 :: GHC.Real.Fractional a)
                   (sc3 :: GHC.Show.Show i)
                   (sc4 :: GHC.Classes.Eq i) ->
                 case sc of wild {
                   DEFAULT
                   -> Multilinear.ListTensor.$fFloatingTensor12
                        @ i
                        @ a
                        @ a
                        (GHC.Real./ @ a sc2 sc1)
                        wild
                   Multilinear.ListTensor.Scalar x2
                   -> case GHC.Real./ @ a sc2 sc1 x2 of dt1 { DEFAULT ->
                      Multilinear.ListTensor.Scalar @ i @ a dt1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$s$wswitchInd' ::
    GHC.Base.Maybe [GHC.Types.Char]
    -> Multilinear.Index.TIndex i
    -> [Multilinear.ListTensor.Tensor i a]
    -> GHC.Real.Integral i => Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <S,1*U><L,U><L,U><L,U(U,U,A,A,A,A,A,A,C(U))>,
     Unfolding: (\ @ a
                   @ i
                   (sc :: GHC.Base.Maybe [GHC.Types.Char])
                   (sc1 :: Multilinear.Index.TIndex i)
                   (sc2 :: [Multilinear.ListTensor.Tensor i a])
                   (sc3 :: GHC.Real.Integral i) ->
                 case sc of wild {
                   GHC.Base.Nothing -> Multilinear.ListTensor.Tensor @ i @ a sc1 sc2
                   GHC.Base.Just ipv
                   -> case GHC.List.$wlenAcc
                             @ (Multilinear.Index.TIndex i)
                             (Multilinear.ListTensor.$fFloatingTensor_$sds @ a @ i sc1 sc2)
                             0# of ww2 { DEFAULT ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># ww2 1#) of wild1 {
                        GHC.Types.False -> Multilinear.ListTensor.Tensor @ i @ a sc1 sc2
                        GHC.Types.True
                        -> case Multilinear.ListTensor.$wswitchInd
                                  @ i
                                  @ a
                                  sc3
                                  (Multilinear.ListTensor.Tensor @ i @ a sc1 sc2)
                                  wild of t2 {
                             DEFAULT
                             -> case Multilinear.ListTensor.$fFloatingTensor23
                                ret_ty (Multilinear.ListTensor.Tensor i a)
                                of {}
                             Multilinear.ListTensor.Tensor ds2 ds3
                             -> case GHC.Base.map
                                       @ (Multilinear.ListTensor.Tensor i a)
                                       @ (Multilinear.ListTensor.Tensor i a)
                                       (\ (ds4 :: Multilinear.ListTensor.Tensor i a) ->
                                        Multilinear.ListTensor.$fFloatingTensor_$s$wswitchInd'1
                                          @ a
                                          @ i
                                          ipv
                                          ds4
                                          sc3)
                                       ds3 of dt1 { DEFAULT ->
                                Multilinear.ListTensor.Tensor @ i @ a ds2 dt1 } } } } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$s$wswitchInd'1 ::
    [GHC.Types.Char]
    -> Multilinear.ListTensor.Tensor i a
    -> GHC.Real.Integral i => Multilinear.ListTensor.Tensor i a
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U(U,U,A,A,A,A,A,A,C(U))> -}
b1bce1931c788ab8b744f827a7a88135
  $fFloatingTensor_$sds ::
    Multilinear.Index.TIndex i
    -> [Multilinear.ListTensor.Tensor i a]
    -> [Multilinear.Index.TIndex i]
  {- Arity: 2, Strictness: <L,U><L,U> -}
b1bce1931c788ab8b744f827a7a88135
  $fFractionalTensor ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Real.Fractional a) =>
    GHC.Real.Fractional (Multilinear.ListTensor.Tensor i a)
  DFunId
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(U(C(U),C(C1(U)),C(U),A,C(U),C(U),C(U)),C(U),A,C(U))>m,
     Unfolding: DFun: @ i
                      @ a
                      ($dEq :: GHC.Classes.Eq i)
                      ($dShow :: GHC.Show.Show i)
                      ($dIntegral :: GHC.Real.Integral i)
                      ($dFractional :: GHC.Real.Fractional a).
                  @ (Multilinear.ListTensor.Tensor i a)
                  (Multilinear.ListTensor.$fFractionalTensor4
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFractional)
                  (Multilinear.ListTensor.$fFractionalTensor_$c/
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFractional)
                  (Multilinear.ListTensor.$fFractionalTensor_$crecip
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFractional)
                  (Multilinear.ListTensor.$fFractionalTensor1
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dFractional) -}
b1bce1931c788ab8b744f827a7a88135
  $fFractionalTensor1 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Real.Fractional a) =>
    GHC.Real.Rational -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><S(LLLC(S)),1*U(A,A,A,1*C1(U))><S(SS),1*U(U,U)>m1,
     Unfolding: InlineRule (5, True, False)
                (\ @ i
                   @ a
                   ($dEq :: GHC.Classes.Eq i)
                   ($dShow :: GHC.Show.Show i)
                   ($dIntegral :: GHC.Real.Integral i)
                   ($dFractional :: GHC.Real.Fractional a)
                   (x1 :: GHC.Real.Rational) ->
                 case x1 of x2 { GHC.Real.:% ipv ipv1 ->
                 case GHC.Real.fromRational @ a $dFractional x2 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.Scalar @ i @ a dt1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fFractionalTensor2 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Real.Fractional a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(S(LLLLLLC(S))LLL),U(1*U(A,A,A,A,A,A,1*C1(U)),C(U),A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Real.Fractional a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds24 @ i @ a w w1 w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fFractionalTensor3 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Real.Fractional a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(A,C(U),A,A)><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Real.Fractional a)
                   (w4 :: Multilinear.ListTensor.Tensor i a)
                   (w5 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds13 @ i @ a w w1 w3 w4 w5) -}
b1bce1931c788ab8b744f827a7a88135
  $fFractionalTensor4 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Real.Fractional a) =>
    GHC.Num.Num (Multilinear.ListTensor.Tensor i a)
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,1*U(1*U(C(U),C(C1(U)),C(U),A,C(U),C(U),C(U)),A,A,A)>m,
     Unfolding: InlineRule (4, True, False)
                (\ @ i
                   @ a
                   ($dEq :: GHC.Classes.Eq i)
                   ($dShow :: GHC.Show.Show i)
                   ($dIntegral :: GHC.Real.Integral i)
                   ($dFractional :: GHC.Real.Fractional a) ->
                 Multilinear.ListTensor.$fNumTensor
                   @ i
                   @ a
                   $dEq
                   $dShow
                   $dIntegral
                   (GHC.Real.$p1Fractional @ a $dFractional)) -}
b1bce1931c788ab8b744f827a7a88135
  $fFractionalTensor_$c/ ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Real.Fractional a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(A,C(U),A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFractionalTensor3 -}
b1bce1931c788ab8b744f827a7a88135
  $fFractionalTensor_$crecip ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Real.Fractional a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(S(LLLLLLC(S))LLL),U(1*U(A,A,A,A,A,A,1*C1(U)),C(U),A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fFractionalTensor2 -}
b1bce1931c788ab8b744f827a7a88135
  $fFunctorTensor ::
    GHC.Base.Functor (Multilinear.ListTensor.Tensor i)
  DFunId
  {- HasNoCafRefs, Strictness: m,
     Unfolding: DFun: @ i.
                  @ (Multilinear.ListTensor.Tensor i)
                  (Multilinear.ListTensor.$fFloatingTensor12 @ i)
                  (Multilinear.ListTensor.$fFunctorTensor1 @ i) -}
b1bce1931c788ab8b744f827a7a88135
  $fFunctorTensor1 ::
    a
    -> Multilinear.ListTensor.Tensor i b
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ i
                   @ a
                   @ b
                   (eta :: a)
                   (eta1 :: Multilinear.ListTensor.Tensor i b) ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ b
                   @ a
                   (\ (ds2 :: b) -> eta)
                   eta1) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor ::
    Multilinear.Operations.Multilinear Multilinear.ListTensor.Tensor
  DFunId
  {- Unfolding: DFun:.
                  @ Multilinear.ListTensor.Tensor
                  Multilinear.ListTensor.$fMultilinearTensor_$c.+
                  Multilinear.ListTensor.$fMultilinearTensor_$c.-
                  Multilinear.ListTensor.$fMultilinearTensor_$c.*
                  Multilinear.ListTensor.$fMultilinearTensor_$c./
                  Multilinear.ListTensor.$fMultilinearTensor_$c+.
                  Multilinear.ListTensor.$fMultilinearTensor_$c-.
                  Multilinear.ListTensor.$fMultilinearTensor_$c*.
                  Multilinear.ListTensor.$fMultilinearTensor_$c/.
                  Multilinear.ListTensor.$fMultilinearTensor6
                  Multilinear.ListTensor.$fMultilinearTensor3
                  Multilinear.ListTensor.$fMultilinearTensor5
                  Multilinear.ListTensor.$fMultilinearTensor4
                  Multilinear.ListTensor.$fMultilinearTensor_$cinverse
                  Multilinear.ListTensor.$fMultilinearTensor_$cconcat
                  Multilinear.ListTensor.$fMultilinearTensor2
                  Multilinear.ListTensor.$fMultilinearTensor1 -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor1 ::
    GHC.Num.Num i => Multilinear.ListTensor.Tensor i a -> i
  {- Arity: 2,
     Strictness: <S,U(A,A,C(C1(U)),C(U),A,A,C(U))><S,1*U> -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor2 ::
    GHC.Classes.Eq i =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a -> GHC.Types.Bool
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: (\ @ i
                   @ a
                   ($dEq :: GHC.Classes.Eq i)
                   (t1 :: Multilinear.ListTensor.Tensor i a)
                   (t2 :: Multilinear.ListTensor.Tensor i a) ->
                 case t2 of t4 { DEFAULT ->
                 letrec {
                   go1 :: [Multilinear.Index.TIndex i]
                          -> [Multilinear.Index.TIndex i] -> Data.Monoid.All
                     {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
                   = \ (ds2 :: [Multilinear.Index.TIndex i])
                       (_ys :: [Multilinear.Index.TIndex i]) ->
                     case ds2 of wild {
                       [] -> GHC.Types.True `cast` (Sym (Data.Monoid.N:All[0]))
                       : ipv ipv1
                       -> case _ys of wild1 {
                            [] -> GHC.Types.True `cast` (Sym (Data.Monoid.N:All[0]))
                            : ipv2 ipv3
                            -> case Multilinear.Index.equivI @ i $dEq ipv ipv2 of wild2 {
                                 GHC.Types.False
                                 -> GHC.Types.False `cast` (Sym (Data.Monoid.N:All[0]))
                                 GHC.Types.True -> go1 ipv1 ipv3 } } }
                 } in
                 (go1
                    (Multilinear.ListTensor.$fMultilinearTensor3 @ i @ a t1)
                    (Multilinear.ListTensor.$fMultilinearTensor3 @ i @ a t4))
                   `cast`
                 (Data.Monoid.N:All[0]) }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor3 ::
    Multilinear.ListTensor.Tensor i a -> [Multilinear.Index.TIndex i]
  {- Arity: 1, Strictness: <S,1*U> -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor4 ::
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor5 ::
    Multilinear.ListTensor.Tensor i a
    -> GHC.Base.String
    -> GHC.Base.String
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,1*U><S,1*U> -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor6 ::
    Multilinear.ListTensor.Tensor i a -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ i @ a (w :: Multilinear.ListTensor.Tensor i a) ->
                 case Multilinear.ListTensor.$wds28
                        @ i
                        @ a
                        w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$c*. ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor i a
    -> a -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,C(C1(U)),A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ i
                   ($dNum :: GHC.Num.Num a)
                   (t :: Multilinear.ListTensor.Tensor i a)
                   (x1 :: a) ->
                 case t of t1 { DEFAULT ->
                 case x1 of x2 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ a
                   @ a
                   (\ (ds2 :: a) -> GHC.Num.* @ a $dNum ds2 x2)
                   t1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$c+. ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor i a
    -> a -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ i
                   ($dNum :: GHC.Num.Num a)
                   (t :: Multilinear.ListTensor.Tensor i a)
                   (x1 :: a) ->
                 case t of t1 { DEFAULT ->
                 case x1 of x2 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ a
                   @ a
                   (\ (ds2 :: a) -> GHC.Num.+ @ a $dNum ds2 x2)
                   t1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$c-. ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor i a
    -> a -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a
                   @ i
                   ($dNum :: GHC.Num.Num a)
                   (t :: Multilinear.ListTensor.Tensor i a)
                   (x1 :: a) ->
                 case x1 of x2 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ a
                   @ a
                   (\ (p :: a) ->
                    case p of p1 { DEFAULT -> GHC.Num.- @ a $dNum p1 x2 })
                   t }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$c.* ::
    GHC.Num.Num a =>
    a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLC(S)LLLL),1*U(A,A,1*C1(U),A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ i
                   ($dNum :: GHC.Num.Num a)
                   (x1 :: a)
                   (t :: Multilinear.ListTensor.Tensor i a) ->
                 case x1 of x2 { DEFAULT ->
                 case t of t1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ a
                   @ a
                   (GHC.Num.* @ a $dNum x2)
                   t1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$c.+ ::
    GHC.Num.Num a =>
    a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(S)LLLLLL),1*U(1*C1(U),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ i
                   ($dNum :: GHC.Num.Num a)
                   (x1 :: a)
                   (t :: Multilinear.ListTensor.Tensor i a) ->
                 case x1 of x2 { DEFAULT ->
                 case t of t1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ a
                   @ a
                   (GHC.Num.+ @ a $dNum x2)
                   t1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$c.- ::
    GHC.Num.Num a =>
    a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(S)LLLLL),1*U(A,1*C1(U),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ i
                   ($dNum :: GHC.Num.Num a)
                   (x1 :: a)
                   (t :: Multilinear.ListTensor.Tensor i a) ->
                 case x1 of x2 { DEFAULT ->
                 case t of t1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ a
                   @ a
                   (GHC.Num.- @ a $dNum x2)
                   t1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$c./ ::
    GHC.Real.Fractional a =>
    a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(S)LL),1*U(A,1*C1(U),A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ i
                   ($dFractional :: GHC.Real.Fractional a)
                   (x1 :: a)
                   (t :: Multilinear.ListTensor.Tensor i a) ->
                 case x1 of x2 { DEFAULT ->
                 case t of t1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ a
                   @ a
                   (GHC.Real./ @ a $dFractional x2)
                   t1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$c/. ::
    GHC.Real.Fractional a =>
    Multilinear.ListTensor.Tensor i a
    -> a -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)),A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ i
                   ($dFractional :: GHC.Real.Fractional a)
                   (t :: Multilinear.ListTensor.Tensor i a)
                   (x1 :: a) ->
                 case t of t1 { DEFAULT ->
                 case x1 of x2 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor12
                   @ i
                   @ a
                   @ a
                   (\ (ds2 :: a) -> GHC.Real./ @ a $dFractional ds2 x2)
                   t1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$cconcat ::
    GHC.Types.Char
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*H><S,1*U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ i
                   @ a
                   (ds2 :: GHC.Types.Char)
                   (ds3 :: Multilinear.ListTensor.Tensor i a)
                   (t :: Multilinear.ListTensor.Tensor i a) ->
                 case ds2 of ds4 { GHC.Types.C# ipv ->
                 case ds3 of ds5 { DEFAULT -> t } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fMultilinearTensor_$cinverse ::
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ i @ a (t :: Multilinear.ListTensor.Tensor i a) -> t) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    GHC.Num.Num (Multilinear.ListTensor.Tensor i a)
  DFunId
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(C(U),C(C1(U)),C(U),A,C(U),C(U),C(U))>m,
     Unfolding: DFun: @ i
                      @ a
                      ($dEq :: GHC.Classes.Eq i)
                      ($dShow :: GHC.Show.Show i)
                      ($dIntegral :: GHC.Real.Integral i)
                      ($dNum :: GHC.Num.Num a).
                  @ (Multilinear.ListTensor.Tensor i a)
                  (Multilinear.ListTensor.$fNumTensor_$c+
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dNum)
                  (Multilinear.ListTensor.$fNumTensor_$c-
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dNum)
                  (Multilinear.ListTensor.$fNumTensor5
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dNum)
                  (Multilinear.ListTensor.$fNumTensor_$cnegate
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dNum)
                  (Multilinear.ListTensor.$fNumTensor_$cabs
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dNum)
                  (Multilinear.ListTensor.$fNumTensor_$csignum
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dNum)
                  (Multilinear.ListTensor.$fNumTensor1
                     @ i
                     @ a
                     $dEq
                     $dShow
                     $dIntegral
                     $dNum) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor1 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    GHC.Integer.Type.Integer -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><S,1*U>m1,
     Unfolding: InlineRule (5, True, False)
                (\ @ i
                   @ a
                   ($dEq :: GHC.Classes.Eq i)
                   ($dShow :: GHC.Show.Show i)
                   ($dIntegral :: GHC.Real.Integral i)
                   ($dNum :: GHC.Num.Num a)
                   (x1 :: GHC.Integer.Type.Integer) ->
                 case x1 of x2 { DEFAULT ->
                 case GHC.Num.fromInteger @ a $dNum x2 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.Scalar @ i @ a dt1 } }) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor2 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,C(U),A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Num.Num a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds25 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor3 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,C(U),A,A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Num.Num a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds26 @ i @ a w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor4 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(LLLLLLC(S)),U(A,C(C1(U)),A,A,A,A,1*C1(U))><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Num.Num a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds27 @ i @ a w w1 w3 w4) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor5 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,A><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(C(U),A,C(U),A,A,A,C(U))><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Num.Num a)
                   (w4 :: Multilinear.ListTensor.Tensor i a)
                   (w5 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds22 @ i @ a w1 w2 w3 w4 w5) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor6 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(A,C(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Num.Num a)
                   (w4 :: Multilinear.ListTensor.Tensor i a)
                   (w5 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds2 @ i @ a w w1 w3 w4 w5) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor7 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(C(U),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Num.Num a)
                   (w4 :: Multilinear.ListTensor.Tensor i a)
                   (w5 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds4 @ i @ a w w1 w3 w4 w5) -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor_$c+ ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(C(U),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fNumTensor7 -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor_$c- ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 6,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><L,U(A,C(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fNumTensor6 -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor_$cabs ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,C(U),A,A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fNumTensor3 -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor_$cnegate ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,A><S(LLLLLLC(S)),U(A,C(C1(U)),A,A,A,A,1*C1(U))><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fNumTensor4 -}
b1bce1931c788ab8b744f827a7a88135
  $fNumTensor_$csignum ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,U(A,A,A,A,A,C(U),A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fNumTensor2 -}
b1bce1931c788ab8b744f827a7a88135
  $fShowTensor ::
    (GHC.Show.Show i, GHC.Show.Show a) =>
    GHC.Show.Show (Multilinear.ListTensor.Tensor i a)
  DFunId
  {- Arity: 2, Strictness: <L,U(A,C(U),A)><L,U(A,C(U),A)>m,
     Unfolding: DFun: @ i
                      @ a
                      ($dShow :: GHC.Show.Show i)
                      ($dShow1 :: GHC.Show.Show a).
                  @ (Multilinear.ListTensor.Tensor i a)
                  (Multilinear.ListTensor.$fShowTensor_$cshowsPrec
                     @ i
                     @ a
                     $dShow
                     $dShow1)
                  (Multilinear.ListTensor.$fShowTensor_$cshow @ i @ a $dShow $dShow1)
                  (Multilinear.ListTensor.$fShowTensor_$cshowList
                     @ i
                     @ a
                     $dShow
                     $dShow1) -}
b1bce1931c788ab8b744f827a7a88135
  $fShowTensor1 ::
    (GHC.Show.Show i, GHC.Show.Show a) =>
    [Multilinear.ListTensor.Tensor i a] -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <L,U(A,C(U),A)><L,U(A,C(U),A)><S,1*U><L,U>,
     Unfolding: (\ @ i
                   @ a
                   ($dShow :: GHC.Show.Show i)
                   ($dShow1 :: GHC.Show.Show a)
                   (ls :: [Multilinear.ListTensor.Tensor i a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Multilinear.ListTensor.Tensor i a)
                   (\ (x1 :: Multilinear.ListTensor.Tensor i a)
                      (s1 :: GHC.Base.String)[OneShot] ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (Multilinear.ListTensor.$fShowTensor2 @ i @ a $dShow $dShow1 x1)
                      s1)
                   ls
                   s) -}
b1bce1931c788ab8b744f827a7a88135
  $fShowTensor2 ::
    (GHC.Show.Show i, GHC.Show.Show a) =>
    Multilinear.ListTensor.Tensor i a -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U(A,C(U),A)><L,U(A,C(U),A)><S,1*U> -}
b1bce1931c788ab8b744f827a7a88135
  $fShowTensor3 ::
    (GHC.Show.Show i, GHC.Show.Show a) =>
    GHC.Types.Int
    -> Multilinear.ListTensor.Tensor i a -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <L,U(A,C(U),A)><L,U(A,C(U),A)><L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ i
                   @ a
                   ($dShow :: GHC.Show.Show i)
                   ($dShow1 :: GHC.Show.Show a)
                   (ds2 :: GHC.Types.Int)
                   (x1 :: Multilinear.ListTensor.Tensor i a)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (Multilinear.ListTensor.$fShowTensor2 @ i @ a $dShow $dShow1 x1))
                   s) -}
b1bce1931c788ab8b744f827a7a88135
  $fShowTensor_$cshow ::
    (GHC.Show.Show i, GHC.Show.Show a) =>
    Multilinear.ListTensor.Tensor i a -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U(A,C(U),A)><L,U(A,C(U),A)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fShowTensor2 -}
b1bce1931c788ab8b744f827a7a88135
  $fShowTensor_$cshowList ::
    (GHC.Show.Show i, GHC.Show.Show a) =>
    [Multilinear.ListTensor.Tensor i a] -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <L,U(A,C(U),A)><L,U(A,C(U),A)><S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fShowTensor1 -}
b1bce1931c788ab8b744f827a7a88135
  $fShowTensor_$cshowsPrec ::
    (GHC.Show.Show i, GHC.Show.Show a) =>
    GHC.Types.Int
    -> Multilinear.ListTensor.Tensor i a -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <L,U(A,C(U),A)><L,U(A,C(U),A)><L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Multilinear.ListTensor.$fShowTensor3 -}
74fe8ee26afef144757b044579ed8fbd
  $tc'Err :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16994910641946218038##
                   14344779062477602406##
                   Multilinear.ListTensor.$trModule
                   Multilinear.ListTensor.$tc'Err1) -}
4ef3c173af4fc06103d4c795d61c4c5b
  $tc'Err1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Err"#) -}
99d6abaccc0fa7eda4faf057fd148cce
  $tc'Scalar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5305295587918108194##
                   5036428475159186812##
                   Multilinear.ListTensor.$trModule
                   Multilinear.ListTensor.$tc'Scalar1) -}
d42d2557c60285592e08ce3bfdbda9f7
  $tc'Scalar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Scalar"#) -}
b6b563040b3c5dcd404a77cbf34a82cc
  $tc'Tensor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6137999924895775066##
                   3052690546666526659##
                   Multilinear.ListTensor.$trModule
                   Multilinear.ListTensor.$tc'Tensor1) -}
9c7fb622e43f758df0ea36743ebd917b
  $tc'Tensor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Tensor"#) -}
5652100a04fa5a9eb7100954b407c5a3
  $tcTensor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   690525464416973785##
                   15702683811237418645##
                   Multilinear.ListTensor.$trModule
                   Multilinear.ListTensor.$tcTensor1) -}
4e3d969eb3386c14e7c264e9c6963750
  $tcTensor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Tensor"#) -}
47ede366c763f7066c0888875cc7d8f4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Multilinear.ListTensor.$trModule2
                   Multilinear.ListTensor.$trModule1) -}
2db0a0b17c40d7180cd0cf7e976a862c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Multilinear.ListTensor"#) -}
c4b840e014d89554f640fdd528fc605a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Multilinear-0.1.0.0-E9ARM2QGVFX7aqrS3x5JFU"#) -}
b1bce1931c788ab8b744f827a7a88135
  $w$cput ::
    (Data.Binary.Class.Binary i, Data.Binary.Class.Binary a) =>
    Multilinear.ListTensor.Tensor i a
    -> (# (), Data.ByteString.Builder.Internal.Builder #)
  {- Arity: 3,
     Strictness: <L,U(C(U(A,U)),U,A)><L,U(C(U(U,U)),U,A)><S,1*U>,
     Inline: [0] -}
4a2f3b237acd2ce5f8d1590050a0a5d2
  $w_dot ::
    (GHC.Show.Show i, GHC.Real.Integral i, GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3,
     Strictness: <L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(C(U),A,C(U),A,A,A,C(U))>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wcommonIndex ::
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> GHC.Base.Maybe GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   @ i
                   (w :: Multilinear.ListTensor.Tensor i a)
                   (w1 :: Multilinear.ListTensor.Tensor i a) ->
                 case w of wild {
                   DEFAULT
                   -> case w1 of t2 { DEFAULT -> GHC.Base.Nothing @ GHC.Base.String }
                   Multilinear.ListTensor.Tensor ds2 ds3
                   -> case w1 of wild1 {
                        DEFAULT -> GHC.Base.Nothing @ GHC.Base.String
                        Multilinear.ListTensor.Tensor ds4 ds5
                        -> case GHC.Base.map
                                  @ (Multilinear.Index.TIndex i)
                                  @ [GHC.Types.Char]
                                  (Multilinear.Index.indexName @ i)
                                  (Multilinear.ListTensor.$fFloatingTensor_$sds
                                     @ a
                                     @ i
                                     ds4
                                     ds5) of indicesNames2 { DEFAULT ->
                           case GHC.Base.map
                                  @ (Multilinear.Index.TIndex i)
                                  @ [GHC.Types.Char]
                                  (Multilinear.Index.indexName @ i)
                                  (Multilinear.ListTensor.$fFloatingTensor_$sds
                                     @ a
                                     @ i
                                     ds2
                                     ds3) of indicesNames1 { DEFAULT ->
                           letrec {
                             go1 :: [[GHC.Types.Char]] -> GHC.Base.Maybe GHC.Base.String
                               {- Arity: 1, Strictness: <S,1*U> -}
                             = \ (ds6 :: [[GHC.Types.Char]]) ->
                               case ds6 of wild2 {
                                 [] -> GHC.Base.Nothing @ GHC.Base.String
                                 : y ys
                                 -> case y of i1 { DEFAULT ->
                                    letrec {
                                      go2 :: [GHC.Base.String] -> Data.Monoid.First GHC.Base.String
                                        {- Arity: 1, Strictness: <S,1*U> -}
                                      = \ (ds7 :: [GHC.Base.String]) ->
                                        case ds7 of wild3 {
                                          []
                                          -> (GHC.Base.Nothing @ GHC.Base.String)
                                               `cast`
                                             (Sym (Data.Monoid.N:First[0]) <GHC.Base.String>_N)
                                          : y1 ys1
                                          -> case GHC.Base.eqString y1 i1 of wild4 {
                                               GHC.Types.False -> go2 ys1
                                               GHC.Types.True
                                               -> (GHC.Base.Just @ GHC.Base.String y1)
                                                    `cast`
                                                  (Sym (Data.Monoid.N:First[0]) <GHC.Base.String>_N) } }
                                    } in
                                    case (go2 indicesNames2)
                                           `cast`
                                         (Data.Monoid.N:First[0] <GHC.Base.String>_N) of wild3 {
                                      GHC.Base.Nothing -> go1 ys GHC.Base.Just ipv -> wild3 } } }
                           } in
                           go1 indicesNames1 } } } }) -}
b1bce1931c788ab8b744f827a7a88135
  $wds ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><S(S(S(LLLLLLC(S))LLL)LLLLLLLLLLLLLLLLLLLLLL),U(U(U(U,U,U,U,U,U,U),U,U,U),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Float.Floating a)
                   (w3 :: Multilinear.ListTensor.Tensor i a) ->
                 let {
                   w4 :: GHC.Real.Fractional a = GHC.Float.$p1Floating @ a w2
                 } in
                 let {
                   w5 :: GHC.Num.Num a = GHC.Real.$p1Fractional @ a w4
                 } in
                 case GHC.Num.fromInteger
                        @ a
                        w5
                        Multilinear.ListTensor.$fFloatingTensor3 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$wds3
                   @ i
                   @ a
                   w
                   w1
                   w2
                   (Multilinear.ListTensor.$wds2
                      @ i
                      @ a
                      w
                      w1
                      w5
                      (Multilinear.ListTensor.Scalar @ i @ a dt1)
                      (Multilinear.ListTensor.$wds1 @ i @ a w2 w3)) }) -}
b1bce1931c788ab8b744f827a7a88135
  $wds1 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds10 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A)><S,U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Float.Floating a)
                   (w3 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds13
                   @ i
                   @ a
                   w
                   w1
                   (GHC.Float.$p1Floating @ a w2)
                   (Multilinear.ListTensor.$wds12 @ i @ a w2 w3)
                   (Multilinear.ListTensor.$wds11 @ i @ a w2 w3)) -}
b1bce1931c788ab8b744f827a7a88135
  $wds11 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds12 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds13 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Fractional a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(A,C(U),A,A)><S,1*U><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds14 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds15 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds16 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds17 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(1*U(A,C(U),A,A),A,A,A,A,A,A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Float.Floating a)
                   (w3 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds13
                   @ i
                   @ a
                   w
                   w1
                   (GHC.Float.$p1Floating @ a w2)
                   (Multilinear.ListTensor.$wds19 @ i @ a w2 w3)
                   (Multilinear.ListTensor.$wds18 @ i @ a w2 w3)) -}
b1bce1931c788ab8b744f827a7a88135
  $wds18 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds19 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds2 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(A,C(C1(U)),A,A,A,A,A)><S,1*U><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds20 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(1*U(A,C(U),A,A),A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Float.Floating a)
                   (w3 :: Multilinear.ListTensor.Tensor i a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds13
                   @ i
                   @ a
                   w
                   w1
                   (GHC.Float.$p1Floating @ a w2)
                   (Multilinear.ListTensor.$wds5 @ i @ a w2 w4)
                   (Multilinear.ListTensor.$wds5 @ i @ a w2 w3)) -}
b1bce1931c788ab8b744f827a7a88135
  $wds21 ::
    (GHC.Show.Show i, GHC.Real.Integral i, GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(1*U(1*U(C(U),A,C(U),A,A,A,C(U)),A,A,A),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Show.Show i)
                   (w1 :: GHC.Real.Integral i)
                   (w2 :: GHC.Float.Floating a)
                   (w3 :: Multilinear.ListTensor.Tensor i a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wds1
                   @ i
                   @ a
                   w2
                   (Multilinear.ListTensor.$wds22
                      @ i
                      @ a
                      w
                      w1
                      (GHC.Real.$p1Fractional @ a (GHC.Float.$p1Floating @ a w2))
                      (Multilinear.ListTensor.$wds5 @ i @ a w2 w3)
                      w4)) -}
b1bce1931c788ab8b744f827a7a88135
  $wds22 ::
    (GHC.Show.Show i, GHC.Real.Integral i, GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(C(U),A,C(U),A,A,A,C(U))><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Show.Show i)
                   (w1 :: GHC.Real.Integral i)
                   (w2 :: GHC.Num.Num a)
                   (w3 :: Multilinear.ListTensor.Tensor i a)
                   (w4 :: Multilinear.ListTensor.Tensor i a) ->
                 case w3 of wild {
                   DEFAULT
                   -> case w4 of wild1 {
                        DEFAULT
                        -> case wild of wild2 {
                             Multilinear.ListTensor.Tensor ds2 ds3
                             -> case wild1 of wild3 {
                                  Multilinear.ListTensor.Tensor ds4 ds5
                                  -> case Multilinear.ListTensor.$wcommonIndex
                                            @ a
                                            @ i
                                            wild2
                                            wild3 of cmi { DEFAULT ->
                                     Multilinear.ListTensor.!*!
                                       @ i
                                       @ a
                                       w1
                                       w
                                       w2
                                       (Multilinear.ListTensor.$fFloatingTensor_$s$wswitchInd'
                                          @ a
                                          @ i
                                          cmi
                                          ds2
                                          ds3
                                          w1)
                                       (Multilinear.ListTensor.$fFloatingTensor_$s$wswitchInd'
                                          @ a
                                          @ i
                                          cmi
                                          ds4
                                          ds5
                                          w1) }
                                  Multilinear.ListTensor.Err ipv -> wild3 }
                             Multilinear.ListTensor.Err msg -> wild2 }
                        Multilinear.ListTensor.Scalar x2
                        -> Multilinear.ListTensor.$fFloatingTensor12
                             @ i
                             @ a
                             @ a
                             (\ (ds2 :: a) -> GHC.Num.* @ a w2 ds2 x2)
                             wild }
                   Multilinear.ListTensor.Scalar x1
                   -> case w4 of wild1 {
                        DEFAULT
                        -> Multilinear.ListTensor.$fFloatingTensor12
                             @ i
                             @ a
                             @ a
                             (GHC.Num.* @ a w2 x1)
                             wild1
                        Multilinear.ListTensor.Scalar x2
                        -> case GHC.Num.* @ a w2 x1 x2 of dt1 { DEFAULT ->
                           Multilinear.ListTensor.Scalar @ i @ a dt1 } } }) -}
b1bce1931c788ab8b744f827a7a88135
  $wds23 ::
    (GHC.Show.Show i, GHC.Real.Integral i, GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><S(S(LLLC(S))LLLLLLLLLLLLLLLLLLLLLL),U(U(U(C(U),A,C(U),A,A,A,C(U)),A,A,1*C1(U)),A,C(U),C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Show.Show i)
                   (w1 :: GHC.Real.Integral i)
                   (w2 :: GHC.Float.Floating a)
                   (w3 :: Multilinear.ListTensor.Tensor i a) ->
                 case GHC.Real.fromRational
                        @ a
                        (GHC.Float.$p1Floating @ a w2)
                        Multilinear.ListTensor.$fFloatingTensor25 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$wds21
                   @ i
                   @ a
                   w
                   w1
                   w2
                   w3
                   (Multilinear.ListTensor.Scalar @ i @ a dt1) }) -}
b1bce1931c788ab8b744f827a7a88135
  $wds24 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Fractional a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><S(S(LLLLLLC(S))LLL),U(1*U(A,A,A,A,A,A,1*C1(U)),C(U),A,A)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Fractional a)
                   (w3 :: Multilinear.ListTensor.Tensor i a) ->
                 case GHC.Num.fromInteger
                        @ a
                        (GHC.Real.$p1Fractional @ a w2)
                        Multilinear.ListTensor.$fFloatingTensor2 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$fFloatingTensor_$s$wds
                   @ a
                   @ i
                   w3
                   dt1
                   w2
                   w1
                   w }) -}
b1bce1931c788ab8b744f827a7a88135
  $wds25 ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,C(U),A)><S,1*U>, Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds26 ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,C(U),A,A)><S,1*U>, Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds27 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><S(LLLLLLC(S)),U(A,C(C1(U)),A,A,A,A,1*C1(U))><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Num.Num a)
                   (w3 :: Multilinear.ListTensor.Tensor i a) ->
                 case GHC.Num.fromInteger
                        @ a
                        w2
                        Multilinear.ListTensor.$fFloatingTensor3 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$wds2
                   @ i
                   @ a
                   w
                   w1
                   w2
                   (Multilinear.ListTensor.Scalar @ i @ a dt1)
                   w3 }) -}
b1bce1931c788ab8b744f827a7a88135
  $wds28 ::
    Multilinear.ListTensor.Tensor i a
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds3 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Float.Floating a)
                   (w3 :: Multilinear.ListTensor.Tensor i a) ->
                 let {
                   $dFractional :: GHC.Real.Fractional a
                   = GHC.Float.$p1Floating @ a w2
                 } in
                 let {
                   $dNum :: GHC.Num.Num a = GHC.Real.$p1Fractional @ a $dFractional
                 } in
                 case GHC.Num.fromInteger
                        @ a
                        $dNum
                        Multilinear.ListTensor.$fFloatingTensor2 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$wds5
                   @ i
                   @ a
                   w2
                   (Multilinear.ListTensor.$wds4
                      @ i
                      @ a
                      w
                      w1
                      $dNum
                      (Multilinear.ListTensor.Scalar @ i @ a dt1)
                      w3) }) -}
b1bce1931c788ab8b744f827a7a88135
  $wds4 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 5,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><L,U(C(U),A,A,A,A,A,A)><S,1*U><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds5 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds6 ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Float.Floating a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(C(C1(U)),A)><L,U(A,C(U),A)><S(SLLLLLLLLLLLLLLLLLLLLLL),U(1*U,A,C(U),A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Float.Floating a)
                   (w3 :: Multilinear.ListTensor.Tensor i a) ->
                 let {
                   $dFractional :: GHC.Real.Fractional a
                   = GHC.Float.$p1Floating @ a w2
                 } in
                 let {
                   $dNum :: GHC.Num.Num a = GHC.Real.$p1Fractional @ a $dFractional
                 } in
                 case GHC.Num.fromInteger
                        @ a
                        $dNum
                        Multilinear.ListTensor.$fFloatingTensor2 of dt1 { DEFAULT ->
                 Multilinear.ListTensor.$wds2
                   @ i
                   @ a
                   w
                   w1
                   $dNum
                   (Multilinear.ListTensor.$wds1 @ i @ a w2 w3)
                   (Multilinear.ListTensor.Scalar @ i @ a dt1) }) -}
b1bce1931c788ab8b744f827a7a88135
  $wds7 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds8 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wds9 ::
    GHC.Float.Floating a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,C(U),A,A,A,A,A,A)><S,1*U>,
     Inline: [0] -}
b1bce1931c788ab8b744f827a7a88135
  $wswitchInd ::
    GHC.Real.Integral i =>
    Multilinear.ListTensor.Tensor i a
    -> GHC.Base.Maybe GHC.Base.String
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3,
     Strictness: <L,U(1*U,1*U,A,A,A,A,A,A,C(U))><S,1*U><S,1*U>,
     Inline: [0] -}
8c27487871a69d8e1c4b04317abba32e
  $wswitchInd' ::
    GHC.Real.Integral i =>
    Multilinear.ListTensor.Tensor i a
    -> GHC.Base.Maybe GHC.Base.String
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 3, Strictness: <L,U(U,U,A,A,A,A,A,A,C(U))><S,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ i
                   @ a
                   (w :: GHC.Real.Integral i)
                   (w1 :: Multilinear.ListTensor.Tensor i a)
                   (w2 :: GHC.Base.Maybe GHC.Base.String) ->
                 case w1 of wild {
                   DEFAULT
                   -> case w2 of wild1 {
                        GHC.Base.Nothing -> wild
                        GHC.Base.Just ipv
                        -> case wild of wild2 {
                             Multilinear.ListTensor.Tensor ds2 ds3
                             -> case GHC.List.$wlenAcc
                                       @ (Multilinear.Index.TIndex i)
                                       (Multilinear.ListTensor.$fFloatingTensor_$sds
                                          @ a
                                          @ i
                                          ds2
                                          ds3)
                                       0# of ww2 { DEFAULT ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.># ww2 1#) of wild3 {
                                  GHC.Types.False -> wild2
                                  GHC.Types.True
                                  -> case Multilinear.ListTensor.$wswitchInd
                                            @ i
                                            @ a
                                            w
                                            wild2
                                            wild1 of t2 {
                                       DEFAULT
                                       -> case Multilinear.ListTensor.$fFloatingTensor23
                                          ret_ty (Multilinear.ListTensor.Tensor i a)
                                          of {}
                                       Multilinear.ListTensor.Tensor ds4 ds5
                                       -> case GHC.Base.map
                                                 @ (Multilinear.ListTensor.Tensor i a)
                                                 @ (Multilinear.ListTensor.Tensor i a)
                                                 (\ (ds6 :: Multilinear.ListTensor.Tensor i a) ->
                                                  Multilinear.ListTensor.$fFloatingTensor_$s$wswitchInd'1
                                                    @ a
                                                    @ i
                                                    ipv
                                                    ds6
                                                    w)
                                                 ds5 of dt1 { DEFAULT ->
                                          Multilinear.ListTensor.Tensor @ i @ a ds4 dt1 } } } }
                             Multilinear.ListTensor.Err msg -> wild2 } }
                   Multilinear.ListTensor.Scalar x1
                   -> case w2 of ds2 { DEFAULT -> wild } }) -}
b1bce1931c788ab8b744f827a7a88135
  data Tensor i a
    = Scalar {scalarVal :: !a}
    | Tensor {tensorIndex :: !Multilinear.Index.TIndex i,
              tensorData :: ![Multilinear.ListTensor.Tensor i a]}
    | Err {errMessage :: !GHC.Base.String}
6377018e1d181f3d6adc9ae646f4a6a8
  _dot ::
    (GHC.Classes.Eq i, GHC.Show.Show i, GHC.Real.Integral i,
     GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,A><L,U(A,C(U),A)><L,U(U,U(U,U,U,U,U,U,U,U),A,A,A,A,A,A,C(U))><L,U(C(U),A,C(U),A,A,A,C(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Classes.Eq i)
                   (w1 :: GHC.Show.Show i)
                   (w2 :: GHC.Real.Integral i)
                   (w3 :: GHC.Num.Num a) ->
                 Multilinear.ListTensor.$w_dot @ i @ a w1 w2 w3) -}
ae5b6e12fb1bb65be90e639478680ce4
  commonIndex ::
    GHC.Num.Num a =>
    Multilinear.ListTensor.Tensor i a
    -> Multilinear.ListTensor.Tensor i a
    -> GHC.Base.Maybe GHC.Base.String
  {- Arity: 3, Strictness: <L,A><S,1*U><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   @ i
                   (w :: GHC.Num.Num a)
                   (w1 :: Multilinear.ListTensor.Tensor i a)
                   (w2 :: Multilinear.ListTensor.Tensor i a) ->
                 Multilinear.ListTensor.$wcommonIndex @ a @ i w1 w2) -}
eda57f1289f373231c51cdf842739461
  errMessage :: Multilinear.ListTensor.Tensor i a -> GHC.Base.String
  RecSel Left Multilinear.ListTensor.Tensor
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ i @ a (ds2 :: Multilinear.ListTensor.Tensor i a) ->
                 case ds2 of wild {
                   DEFAULT -> Multilinear.ListTensor.errMessage1
                   Multilinear.ListTensor.Err ds3 -> ds3 }) -}
507396842c85978733d9e21c74e90a1a
  errMessage1 :: GHC.Base.String
  {- Strictness: x -}
e1cba0c5d92178f79fe6c365f4724c56
  scalarVal :: Multilinear.ListTensor.Tensor i a -> a
  RecSel Left Multilinear.ListTensor.Tensor
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ i @ a (ds2 :: Multilinear.ListTensor.Tensor i a) ->
                 case ds2 of wild {
                   DEFAULT -> Multilinear.ListTensor.scalarVal1 @ a
                   Multilinear.ListTensor.Scalar ds3 -> ds3 }) -}
a95f75eb03277d505564aca92eca58fe
  scalarVal1 :: a
  {- Strictness: x -}
7fb2b761324cfa4ed57ffbfccb8784ea
  switchInd ::
    (GHC.Real.Integral i, GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> GHC.Base.Maybe GHC.Base.String
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(1*U,1*U,A,A,A,A,A,A,C(U))><L,A><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Real.Integral i)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Multilinear.ListTensor.Tensor i a)
                   (w3 :: GHC.Base.Maybe GHC.Base.String) ->
                 Multilinear.ListTensor.$wswitchInd @ i @ a w w2 w3) -}
d144b20554263bbae9970cfe1a350575
  switchInd' ::
    (GHC.Real.Integral i, GHC.Num.Num a) =>
    Multilinear.ListTensor.Tensor i a
    -> GHC.Base.Maybe GHC.Base.String
    -> Multilinear.ListTensor.Tensor i a
  {- Arity: 4,
     Strictness: <L,U(U,U,A,A,A,A,A,A,C(U))><L,A><S,1*U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ i
                   @ a
                   (w :: GHC.Real.Integral i)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Multilinear.ListTensor.Tensor i a)
                   (w3 :: GHC.Base.Maybe GHC.Base.String) ->
                 Multilinear.ListTensor.$wswitchInd' @ i @ a w w2 w3) -}
08aa0ea68012efd81f9bf8ffb8e78054
  tensorData ::
    Multilinear.ListTensor.Tensor i a
    -> [Multilinear.ListTensor.Tensor i a]
  RecSel Left Multilinear.ListTensor.Tensor
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ i @ a (ds2 :: Multilinear.ListTensor.Tensor i a) ->
                 case ds2 of wild {
                   DEFAULT -> Multilinear.ListTensor.tensorData1 @ i @ a
                   Multilinear.ListTensor.Tensor ds3 ds4 -> ds4 }) -}
0ada9dc6c7a457cc06f6c5825f6b532f
  tensorData1 :: [Multilinear.ListTensor.Tensor i a]
  {- Strictness: x -}
e0172391584818b6bde2af3d1908461f
  tensorIndex ::
    Multilinear.ListTensor.Tensor i a -> Multilinear.Index.TIndex i
  RecSel Left Multilinear.ListTensor.Tensor
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ i @ a (ds2 :: Multilinear.ListTensor.Tensor i a) ->
                 case ds2 of wild {
                   DEFAULT -> Multilinear.ListTensor.$fFloatingTensor23 @ i
                   Multilinear.ListTensor.Tensor ds3 ds4 -> ds3 }) -}
instance [safe] Data.Binary.Class.Binary [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fBinaryTensor
instance [safe] GHC.Classes.Eq [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fEqTensor
instance [safe] GHC.Float.Floating [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fFloatingTensor
instance [safe] GHC.Real.Fractional [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fFractionalTensor
instance [safe] GHC.Base.Functor [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fFunctorTensor
instance [safe] Multilinear.Operations.Multilinear [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fMultilinearTensor
instance [safe] GHC.Num.Num [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fNumTensor
instance [safe] GHC.Show.Show [Multilinear.ListTensor.Tensor]
  = Multilinear.ListTensor.$fShowTensor
"SC:$wds0" [0] forall @ a
                      @ i
                      (sc :: Multilinear.ListTensor.Tensor i a)
                      (sc1 :: a)
                      (sc2 :: GHC.Real.Fractional a)
                      (sc3 :: GHC.Show.Show i)
                      (sc4 :: GHC.Classes.Eq i)
  Multilinear.ListTensor.$wds13 @ i
                                @ a
                                sc4
                                sc3
                                sc2
                                (Multilinear.ListTensor.Scalar @ i @ a sc1)
                                sc
  = Multilinear.ListTensor.$fFloatingTensor_$s$wds
      @ a
      @ i
      sc
      sc1
      sc2
      sc3
      sc4
"SC:$wswitchInd'0" [0] forall @ a
                              @ i
                              (sc :: GHC.Base.Maybe [GHC.Types.Char])
                              (sc1 :: Multilinear.Index.TIndex i)
                              (sc2 :: [Multilinear.ListTensor.Tensor i a])
                              (sc3 :: GHC.Real.Integral i)
  Multilinear.ListTensor.$wswitchInd' @ i
                                      @ a
                                      sc3
                                      (Multilinear.ListTensor.Tensor @ i @ a sc1 sc2)
                                      sc
  = Multilinear.ListTensor.$fFloatingTensor_$s$wswitchInd'
      @ a
      @ i
      sc
      sc1
      sc2
      sc3
"SC:$wswitchInd'1" [0] forall @ a
                              @ i
                              (sc :: [GHC.Types.Char])
                              (sc1 :: Multilinear.ListTensor.Tensor i a)
                              (sc2 :: GHC.Real.Integral i)
  Multilinear.ListTensor.$wswitchInd' @ i
                                      @ a
                                      sc2
                                      sc1
                                      (GHC.Base.Just @ GHC.Base.String sc)
  = Multilinear.ListTensor.$fFloatingTensor_$s$wswitchInd'1
      @ a
      @ i
      sc
      sc1
      sc2
"SC:ds0" [ALWAYS] forall @ a
                         @ i
                         (sc :: Multilinear.Index.TIndex i)
                         (sc1 :: [Multilinear.ListTensor.Tensor i a])
  Multilinear.ListTensor.$fMultilinearTensor3 @ i
                                              @ a
                                              (Multilinear.ListTensor.Tensor @ i @ a sc sc1)
  = Multilinear.ListTensor.$fFloatingTensor_$sds @ a @ i sc sc1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

